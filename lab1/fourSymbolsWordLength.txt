bash
general
commands
manual
bash
name
bash
bourne
again
shell
synopsis
bash
options
command
string
file
copyright
bash
copyright
free
software
foundation
description
bash
compatible
command
language
interpreter
that
executes
commands
read
from
standard
input
from
file
bash
also
incorporates
useful
features
from
korn
shells
bash
intended
conformant
implementation
shell
utilities
portion
ieee
posix
specifica
tion
ieee
standard
bash
configured
posix
conformant
default
options
single
character
shell
options
documented
description
builtin
command
including
used
options
when
shell
invoked
addition
bash
interprets
following
options
when
voked
option
present
then
commands
read
from
first
option
argument
command
string
there
arguments
after
command
string
first
argument
assigned
remaining
argu
ments
assigned
positional
parameters
assignment
sets
name
shell
which
used
warning
error
messages
option
present
shell
interactive
make
bash
been
invoked
login
shell
invocation
below
option
present
shell
becomes
restricted
restricted
shell
below
option
present
arguments
remain
after
option
processing
then
commands
read
from
standard
input
this
option
allows
positional
parameters
when
invoking
interac
tive
shell
when
reading
input
through
pipe
print
shell
input
lines
they
read
print
commands
their
arguments
they
executed
list
double
quoted
strings
preceded
printed
standard
output
these
strings
that
subject
language
translation
when
current
locale
posix
this
implies
option
commands
will
executed
shopt
option
shopt
option
shell
options
accepted
shopt
builtin
shell
builtin
commands
below
shopt
option
present
sets
value
that
option
unsets
shopt
option
plied
names
values
shell
options
accepted
shopt
printed
standard
output
invocation
option
output
displayed
format
that
reused
input
signals
options
disables
further
option
processing
arguments
after
treated
filenames
arguments
argument
equivalent
bash
also
interprets
number
multi
character
options
these
options
must
appear
command
line
before
single
character
options
recognized
debugger
arrange
debugger
profile
executed
before
shell
starts
turns
extended
debugging
mode
description
extdebug
option
shopt
builtin
below
dump
strings
equivalent
output
gettext
portable
object
file
format
dump
strings
equivalent
help
display
usage
message
standard
output
exit
successfully
init
file
file
rcfile
file
execute
commands
from
file
instead
system
wide
initialization
file
bash
bashrc
standard
personal
initialization
file
bashrc
shell
interactive
invocation
below
login
equivalent
noediting
readline
library
read
command
lines
when
shell
interactive
noprofile
read
either
system
wide
startup
file
profile
personal
initialization
files
bash
profile
bash
login
profile
default
bash
reads
these
files
when
invoked
login
shell
invocation
below
norc
read
execute
system
wide
initialization
file
bash
bashrc
personal
initialization
file
bashrc
shell
interactive
this
option
default
shell
invoked
posix
change
behavior
bash
where
default
operation
differs
from
posix
standard
match
standard
posix
mode
also
below
reference
document
that
details
posix
mode
affects
bash
behavior
restricted
shell
becomes
restricted
restricted
shell
below
verbose
equivalent
version
show
version
information
this
instance
bash
standard
output
exit
successfully
arguments
arguments
remain
after
option
processing
neither
option
been
supplied
first
argu
ment
assumed
name
file
containing
shell
commands
bash
invoked
this
fashion
name
file
positional
parameters
remaining
arguments
bash
reads
executes
commands
from
this
file
then
exits
bash
exit
status
exit
status
last
command
executed
script
commands
executed
exit
status
attempt
first
made
open
file
rent
directory
file
found
then
shell
searches
directories
path
script
invocation
login
shell
whose
first
character
argument
zero
started
with
login
option
interactive
shell
started
without
option
arguments
unless
specified
without
option
whose
standard
input
error
both
connected
terminals
determined
isatty
started
with
option
includes
bash
interactive
allowing
shell
script
startup
file
test
this
state
following
paragraphs
describe
bash
executes
startup
files
files
exist
cannot
read
bash
reports
error
tildes
expanded
filenames
described
below
under
tilde
expansion
pansion
section
when
bash
invoked
interactive
login
shell
interactive
shell
with
login
option
first
reads
executes
commands
from
file
profile
that
file
exists
after
reading
that
file
looks
bash
profile
bash
login
profile
that
order
reads
executes
commands
from
first
that
exists
readable
noprofile
option
used
when
shell
started
inhibit
this
behavior
when
interactive
login
shell
exits
interactive
login
shell
executes
exit
builtin
command
bash
reads
executes
commands
from
file
bash
logout
exists
when
interactive
shell
that
login
shell
started
bash
reads
executes
commands
from
bash
bashrc
bashrc
these
files
exist
this
inhibited
using
norc
option
file
file
option
will
force
bash
read
execute
commands
from
file
instead
bash
bashrc
bashrc
when
bash
started
interactively
shell
script
example
looks
variable
bash
environment
expands
value
appears
there
uses
expanded
value
name
file
read
execute
bash
behaves
following
command
were
executed
bash
then
bash
value
path
variable
used
search
filename
bash
invoked
with
name
tries
mimic
startup
behavior
historical
versions
closely
possible
while
conforming
posix
standard
well
when
invoked
interactive
login
shell
interactive
shell
with
login
option
first
attempts
read
execute
commands
from
profile
profile
that
order
noprofile
option
used
inhibit
this
behavior
when
invoked
inter
active
shell
with
name
bash
looks
variable
expands
value
defined
uses
panded
value
name
file
read
execute
since
shell
invoked
does
attempt
read
execute
commands
from
other
startup
files
rcfile
option
effect
interactive
shell
invoked
with
name
does
attempt
read
other
startup
files
when
invoked
bash
enters
posix
mode
after
startup
files
read
when
bash
started
posix
mode
with
posix
command
line
option
follows
posix
standard
startup
files
this
mode
interactive
shells
expand
variable
commands
read
executed
from
file
whose
name
expanded
value
other
startup
files
read
bash
attempts
determine
when
being
with
standard
input
connected
network
connection
when
executed
remote
shell
daemon
usually
rshd
secure
shell
daemon
sshd
bash
determines
being
this
fashion
reads
executes
commands
from
bashrc
bashrc
these
files
exist
read
able
will
this
invoked
norc
option
used
inhibit
this
behavior
file
option
used
force
another
file
read
neither
rshd
sshd
generally
invoke
shell
with
those
options
allow
them
specified
shell
started
with
effective
user
group
equal
real
user
group
option
supplied
startup
files
read
shell
functions
inherited
from
environment
shellopts
bashopts
cdpath
globignore
variables
they
appear
environment
ignored
effective
user
real
user
option
supplied
invocation
startup
behavior
same
effective
user
reset
definitions
following
definitions
used
throughout
rest
this
document
blank
space
word
sequence
characters
considered
single
unit
shell
also
known
token
name
word
consisting
only
alphanumeric
characters
underscores
beginning
with
alphabetic
character
underscore
also
referred
identifier
metacharacter
character
that
when
unquoted
separates
words
following
space
newline
control
operator
token
that
performs
control
function
following
symbols
newline
reserved
words
reserved
words
words
that
have
special
meaning
shell
following
words
recognized
reserved
when
unquoted
either
first
word
command
shell
grammar
below
third
word
case
select
command
only
valid
third
word
command
only
valid
case
coproc
done
elif
else
esac
function
select
then
until
while
time
shell
grammar
simple
commands
simple
command
sequence
optional
variable
assignments
followed
blank
separated
words
redirections
terminated
control
operator
first
word
specifies
command
executed
passed
argu
ment
zero
remaining
words
passed
arguments
invoked
command
return
value
simple
command
exit
status
command
terminated
signal
pipelines
pipeline
sequence
more
commands
separated
control
operators
format
pipeline
time
command
command
standard
output
command
connected
pipe
standard
input
command
this
connection
formed
before
redirections
specified
command
redirection
below
used
command
standard
error
addition
standard
output
connected
command
standard
input
through
pipe
short
hand
this
implicit
redirection
standard
error
standard
output
performed
after
redirections
specified
command
return
status
pipeline
exit
status
last
command
unless
pipefail
option
enabled
pipefail
enabled
pipeline
return
status
value
last
rightmost
command
exit
with
zero
status
zero
commands
exit
successfully
reserved
word
precedes
pipeline
exit
that
pipeline
logical
negation
exit
status
described
above
shell
waits
mands
pipeline
terminate
before
returning
value
time
reserved
word
precedes
pipeline
elapsed
well
user
system
time
consumed
execution
reported
when
pipeline
terminates
option
changes
output
format
that
specified
posix
when
shell
posix
mode
does
recognize
time
reserved
word
next
token
begins
with
timeformat
variable
format
string
that
specifies
timing
information
should
displayed
description
timeformat
under
shell
variables
below
when
shell
posix
mode
time
followed
newline
this
case
shell
displays
total
user
system
time
consumed
shell
children
timeformat
variable
used
specify
format
time
information
each
command
pipeline
executed
separate
process
subshell
command
execution
environ
ment
description
subshell
environment
lastpipe
option
enabled
using
shopt
builtin
description
shopt
below
last
element
pipeline
shell
process
lists
list
sequence
more
pipelines
separated
operators
optionally
minated
newline
these
list
operators
have
equal
precedence
followed
which
have
equal
precedence
sequence
more
newlines
appear
list
instead
semicolon
delimit
commands
command
terminated
control
operator
shell
executes
command
background
shell
shell
does
wait
command
finish
return
status
these
referred
asynchronous
commands
commands
separated
executed
sequentially
shell
waits
each
command
terminate
turn
return
status
exit
status
last
command
executed
lists
sequences
more
pipelines
separated
control
operators
respectively
lists
executed
with
left
associativity
list
form
command
command
command
executed
only
command
returns
exit
status
zero
success
list
form
command
command
command
executed
only
command
returns
zero
exit
status
return
status
lists
exit
status
last
command
executed
list
compound
commands
compound
command
following
most
cases
list
command
description
separated
from
rest
command
more
newlines
followed
newline
place
semicolon
list
list
executed
subshell
environment
command
execution
environment
below
variable
assignments
builtin
commands
that
affect
shell
environment
remain
effect
after
command
completes
return
status
exit
status
list
list
list
simply
executed
current
shell
environment
list
must
terminated
with
newline
semi
colon
this
known
group
command
return
status
exit
status
list
note
that
unlike
metacharacters
reserved
words
must
occur
where
reserved
word
permitted
recognized
since
they
cause
word
break
they
must
separated
from
list
whitespace
other
shell
metacharacter
expression
expression
evaluated
according
rules
described
below
under
arithmetic
evaluation
value
expression
zero
return
status
otherwise
return
status
this
exactly
equivalent
expression
expression
return
status
depending
evaluation
conditional
expression
expression
expressions
composed
primaries
described
below
under
conditional
expressions
word
splitting
pathname
pansion
performed
words
between
tilde
expansion
parameter
variable
expan
sion
arithmetic
expansion
command
substitution
process
substitution
quote
removal
performed
conditional
operators
such
must
unquoted
recognized
primaries
when
used
with
operators
sort
lexicographically
using
current
locale
description
test
builtin
command
section
shell
builtin
commands
below
handling
parame
ters
missing
parameters
when
operators
used
string
right
operator
considered
pattern
matched
according
rules
described
below
under
pattern
matching
extglob
shell
option
were
enabled
operator
equivalent
nocasematch
shell
option
enabled
match
performed
without
regard
case
alphabetic
characters
return
value
string
matches
does
match
tern
otherwise
part
pattern
quoted
force
quoted
portion
matched
string
additional
binary
operator
available
with
same
precedence
when
used
string
right
operator
considered
posix
extended
regular
expression
matched
accordingly
using
posix
regcomp
regexec
interfaces
usually
described
regex
return
value
string
matches
pattern
otherwise
regular
expression
syntactically
incorrect
conditional
expression
return
value
nocasematch
shell
option
enabled
match
performed
without
regard
case
alphabetic
characters
part
pattern
quoted
force
quoted
portion
matched
string
bracket
expressions
regular
expressions
must
treated
carefully
since
normal
quoting
characters
lose
their
meanings
between
brackets
pattern
stored
shell
variable
quoting
variable
expansion
forces
entire
pattern
matched
string
pattern
will
match
matches
part
string
anchor
pattern
using
regular
expres
sion
operators
force
match
entire
string
array
variable
bash
rematch
records
which
parts
string
matched
pattern
element
bash
rematch
with
index
contains
portion
string
matching
entire
regular
expression
substrings
matched
parenthesized
subexpressions
within
regular
expression
saved
remaining
bash
rematch
indices
element
bash
rematch
with
index
portion
string
matching
parenthesized
subexpression
expressions
combined
using
following
operators
listed
decreasing
order
precedence
expression
returns
value
expression
this
used
override
normal
precedence
operators
expression
true
expression
false
expression
expression
true
both
expression
expression
true
expression
expression
true
either
expression
expression
true
operators
evaluate
expression
value
expression
sufficient
determine
return
value
entire
conditional
expression
name
word
list
done
list
words
following
expanded
generating
list
items
variable
name
each
ement
this
list
turn
list
executed
each
time
word
omitted
command
cutes
list
once
each
positional
parameter
that
parameters
below
return
status
exit
status
last
command
that
executes
expansion
items
following
results
empty
list
commands
executed
return
status
expr
expr
expr
list
done
first
arithmetic
expression
expr
evaluated
according
rules
described
below
under
arithmetic
evaluation
arithmetic
expression
expr
then
evaluated
repeatedly
until
evaluates
zero
each
time
expr
evaluates
zero
value
list
executed
arithmetic
expression
expr
evaluated
expression
omitted
behaves
evaluates
return
value
exit
status
last
command
list
that
executed
false
expressions
invalid
select
name
word
list
done
list
words
following
expanded
generating
list
items
expanded
words
printed
standard
error
each
preceded
number
word
omitted
positional
parameters
printed
parameters
below
prompt
then
displayed
line
read
from
standard
input
line
consists
number
corresponding
displayed
words
then
value
name
that
word
line
empty
words
prompt
displayed
again
read
command
completes
other
value
read
causes
name
null
line
read
saved
variable
list
executed
after
each
selection
until
break
command
executed
exit
status
select
exit
status
last
command
executed
list
zero
commands
were
executed
case
word
pattern
pattern
list
esac
case
command
first
expands
word
tries
match
against
each
pattern
turn
using
matching
rules
described
under
pattern
matching
below
word
expanded
using
tilde
expansion
parameter
variable
expansion
arithmetic
expansion
command
substitution
process
substitution
quote
removal
each
pattern
examined
expanded
using
tilde
expansion
parameter
variable
expansion
arithmetic
expansion
command
substitution
process
substitution
nocasematch
shell
option
enabled
match
performed
without
regard
case
alphabetic
characters
when
match
found
corresponding
list
executed
operator
used
subsequent
matches
attempted
after
first
pattern
match
using
place
causes
execution
continue
with
list
associated
with
next
patterns
using
place
causes
shell
test
next
pattern
list
statement
execute
associated
list
successful
match
continuing
case
statement
execution
pattern
list
matched
exit
status
zero
pattern
matches
otherwise
exit
status
last
command
executed
list
list
then
list
elif
list
then
list
else
list
list
executed
exit
status
zero
then
list
executed
otherwise
each
elif
list
executed
turn
exit
status
zero
corresponding
then
list
executed
command
completes
otherwise
else
list
executed
present
exit
status
exit
status
last
command
executed
zero
condition
tested
true
while
list
list
done
until
list
list
done
while
command
continuously
executes
list
list
long
last
command
list
list
turns
exit
status
zero
until
command
identical
while
command
except
that
test
negated
list
executed
long
last
command
list
returns
zero
exit
status
exit
status
while
until
commands
exit
status
last
command
executed
list
zero
none
executed
coprocesses
coprocess
shell
command
preceded
coproc
reserved
word
coprocess
executed
asynchronously
subshell
command
been
terminated
with
control
operator
with
pipe
established
between
executing
shell
coprocess
format
coprocess
coproc
name
command
redirections
this
creates
coprocess
named
name
name
supplied
default
name
coproc
name
must
plied
command
simple
command
above
otherwise
interpreted
first
word
simple
mand
when
coprocess
executed
shell
creates
array
variable
arrays
below
named
name
text
executing
shell
standard
output
command
connected
pipe
file
descriptor
ecuting
shell
that
file
descriptor
assigned
name
standard
input
command
connected
pipe
file
descriptor
executing
shell
that
file
descriptor
assigned
name
this
pipe
tablished
before
redirections
specified
command
redirection
below
file
descriptors
utilized
arguments
shell
commands
redirections
using
standard
word
expansions
other
than
those
created
execute
command
process
substitutions
file
descriptors
available
subshells
process
shell
spawned
execute
coprocess
available
value
variable
name
wait
builtin
command
used
wait
coprocess
terminate
since
coprocess
created
asynchronous
command
coproc
command
always
returns
success
return
status
coprocess
exit
status
command
shell
function
definitions
shell
function
object
that
called
like
simple
command
executes
compound
command
with
positional
parameters
shell
functions
declared
follows
fname
compound
command
redirection
function
fname
compound
command
redirection
this
defines
function
named
fname
reserved
word
function
optional
function
reserved
word
supplied
parentheses
optional
body
function
compound
command
compound
command
compound
commands
above
that
command
usually
list
commands
between
command
listed
under
compound
commands
above
with
exception
function
reserved
word
used
parentheses
supplied
braces
required
compound
command
executed
whenever
fname
specified
name
simple
command
when
posix
mode
fname
must
valid
shell
name
name
posix
special
builtins
default
mode
function
name
unquoted
shell
word
that
does
contain
redirections
redirection
below
specified
when
function
defined
performed
when
function
executed
exit
status
function
definition
zero
unless
error
occurs
readonly
function
with
same
name
already
exists
when
executed
exit
status
function
exit
status
last
command
executed
body
functions
below
comments
interactive
shell
interactive
shell
which
interactive
comments
option
shopt
builtin
enabled
shell
builtin
commands
below
word
beginning
with
causes
that
word
remaining
characters
that
line
ignored
interactive
shell
without
interactive
comments
option
enabled
does
allow
ments
interactive
comments
option
default
interactive
shells
quoting
quoting
used
remove
special
meaning
certain
characters
words
shell
quoting
used
disable
special
treatment
special
characters
prevent
reserved
words
from
being
recognized
such
prevent
parameter
expansion
each
metacharacters
listed
above
under
definitions
special
meaning
shell
must
quoted
represent
itself
when
command
history
expansion
facilities
being
used
history
expansion
below
history
expansion
character
usually
must
quoted
prevent
history
expansion
there
three
quoting
mechanisms
escape
character
single
quotes
double
quotes
quoted
backslash
escape
character
preserves
literal
value
next
character
that
lows
with
exception
newline
newline
pair
appears
backslash
itself
quoted
newline
treated
line
continuation
that
removed
from
input
stream
effectively
ignored
enclosing
characters
single
quotes
preserves
literal
value
each
character
within
quotes
single
quote
occur
between
single
quotes
even
when
preceded
backslash
enclosing
characters
double
quotes
preserves
literal
value
characters
within
quotes
with
ception
when
history
expansion
enabled
when
shell
posix
mode
cial
meaning
within
double
quotes
even
when
history
expansion
enabled
characters
retain
their
cial
meaning
within
double
quotes
backslash
retains
special
meaning
only
when
followed
lowing
characters
newline
double
quote
quoted
within
double
quotes
preceding
with
backslash
enabled
history
expansion
will
performed
unless
appearing
double
quotes
escaped
backslash
backslash
preceding
removed
special
parameters
have
special
meaning
when
double
quotes
parameters
below
words
form
string
treated
specially
word
expands
string
with
backslash
escaped
characters
replaced
specified
ansi
standard
backslash
escape
sequences
present
decoded
follows
alert
bell
backspace
escape
character
form
feed
line
carriage
return
horizontal
vertical
backslash
single
quote
double
quote
question
mark
eight
character
whose
value
octal
value
three
octal
digits
eight
character
whose
value
hexadecimal
value
digits
uhhhh
unicode
character
whose
value
hexadecimal
value
hhhh
four
uhhhhhhhh
unicode
character
whose
value
hexadecimal
value
hhhhhhhh
eight
digits
control
character
expanded
result
single
quoted
dollar
sign
been
present
double
quoted
string
preceded
dollar
sign
string
will
cause
string
translated
according
current
locale
gettext
infrastructure
performs
message
catalog
lookup
translation
using
sages
textdomain
shell
variables
current
locale
posix
there
translations
avail
able
dollar
sign
ignored
string
translated
replaced
replacement
double
quoted
parameters
parameter
entity
that
stores
values
name
number
special
characters
listed
below
under
special
parameters
variable
parameter
denoted
name
variable
value
zero
more
attributes
attributes
assigned
using
declare
builtin
command
declare
below
shell
builtin
mands
parameter
been
assigned
value
null
string
valid
value
once
variable
unset
only
using
unset
builtin
command
shell
builtin
commands
below
variable
assigned
statement
form
name
value
value
given
variable
assigned
null
string
values
undergo
tilde
expansion
parameter
variable
expansion
command
substitution
arithmetic
expansion
quote
removal
expansion
below
variable
integer
attribute
then
value
evaluated
arithmetic
expression
even
pansion
used
arithmetic
expansion
below
word
splitting
performed
with
exception
explained
below
under
special
parameters
pathname
expansion
performed
assignment
statements
also
appear
arguments
alias
declare
typeset
export
readonly
local
builtin
commands
declaration
mands
when
posix
mode
these
builtins
appear
command
after
more
instances
command
builtin
retain
these
assignment
statement
properties
context
where
assignment
statement
assigning
value
shell
variable
array
index
opera
used
append
variable
previous
value
this
includes
arguments
builtin
commands
such
declare
that
accept
assignment
statements
declaration
commands
when
applied
variable
which
integer
attribute
been
value
evaluated
arithmetic
expression
added
variable
current
value
which
also
evaluated
when
applied
array
variable
using
compound
assignment
rays
below
variable
value
unset
when
using
values
appended
array
ginning
greater
than
array
maximum
index
indexed
arrays
added
additional
value
pairs
associative
array
when
applied
string
valued
variable
value
expanded
appended
variable
value
variable
assigned
nameref
attribute
using
option
declare
local
builtin
commands
descriptions
declare
local
below
create
nameref
reference
another
variable
this
allows
variables
manipulated
indirectly
whenever
nameref
variable
referenced
assigned
unset
attributes
modified
other
than
using
changing
nameref
attribute
itself
operation
actually
performed
variable
specified
nameref
variable
value
nameref
commonly
used
within
shell
functions
variable
whose
name
passed
argument
function
instance
variable
name
passed
shell
function
first
argument
running
declare
inside
function
creates
nameref
variable
whose
value
variable
name
passed
first
argument
references
assignments
changes
attributes
treated
references
assignments
attri
bute
modifications
variable
whose
name
passed
control
variable
loop
nameref
attribute
list
words
list
shell
variables
name
reference
will
established
each
word
list
turn
when
loop
executed
array
variables
cannot
given
nameref
attribute
however
nameref
variables
reference
array
variables
subscripted
array
variables
namerefs
unset
option
unset
builtin
otherwise
unset
executed
with
name
nameref
variable
argument
variable
referenced
nameref
variable
will
unset
positional
parameters
positional
parameter
parameter
denoted
more
digits
other
than
single
digit
positional
rameters
assigned
from
shell
arguments
when
invoked
reassigned
using
builtin
command
positional
parameters
assigned
with
assignment
statements
positional
parameters
temporarily
replaced
when
shell
function
executed
functions
below
when
positional
parameter
consisting
more
than
single
digit
expanded
must
enclosed
braces
expansion
below
special
parameters
shell
treats
several
parameters
specially
these
parameters
only
referenced
assignment
them
allowed
expands
positional
parameters
starting
from
when
expansion
within
double
quotes
each
positional
parameter
expands
separate
word
contexts
where
performed
those
words
subject
further
word
splitting
pathname
expansion
when
expansion
occurs
within
double
quotes
expands
single
word
with
value
each
parameter
separated
first
character
special
variable
that
equivalent
where
first
character
value
variable
unset
parameters
separated
spaces
null
parameters
joined
without
intervening
separators
expands
positional
parameters
starting
from
contexts
where
word
splitting
performed
this
expands
each
positional
parameter
separate
word
within
double
quotes
these
words
subject
word
splitting
contexts
where
word
splitting
performed
this
expands
single
word
with
each
positional
parameter
separated
space
when
expansion
occurs
within
double
quotes
each
parameter
expands
separate
word
that
equivalent
double
quoted
expansion
curs
within
word
expansion
first
parameter
joined
with
beginning
part
original
word
expansion
last
parameter
joined
with
last
part
original
word
when
there
positional
parameters
expand
nothing
they
removed
expands
number
positional
parameters
decimal
expands
exit
status
most
recently
executed
foreground
pipeline
expands
current
option
flags
specified
upon
invocation
builtin
command
those
shell
itself
such
option
expands
process
shell
subshell
expands
process
current
shell
subshell
expands
process
most
recently
placed
into
background
whether
executed
asyn
chronous
command
using
builtin
control
below
expands
name
shell
shell
script
this
shell
initialization
bash
invoked
with
file
commands
name
that
file
bash
started
with
option
then
first
argument
after
string
executed
present
otherwise
filename
used
invoke
bash
given
argument
zero
shell
variables
following
variables
shell
shell
startup
pathname
used
invoke
shell
shell
script
being
executed
passed
environment
argument
list
subsequently
expands
last
argument
previous
simple
command
executed
foreground
after
expansion
also
full
pathname
used
invoke
each
command
cuted
placed
environment
exported
that
command
when
checking
mail
this
parameter
holds
name
mail
file
currently
being
checked
bash
expands
full
filename
used
invoke
this
instance
bash
bashopts
colon
separated
list
enabled
shell
options
each
word
list
valid
argument
option
shopt
builtin
command
shell
builtin
commands
below
options
appearing
bashopts
those
reported
shopt
this
variable
environment
when
bash
starts
each
shell
option
list
will
enabled
before
reading
startup
files
this
variable
read
only
bashpid
expands
process
current
bash
process
this
differs
from
under
certain
circumstances
such
subshells
that
require
bash
initialized
assignments
bashpid
have
effect
bashpid
unset
loses
special
properties
even
subsequently
reset
bash
aliases
associative
array
variable
whose
members
correspond
internal
list
aliases
maintained
alias
builtin
elements
added
this
array
appear
alias
list
however
unsetting
array
elements
rently
does
cause
aliases
removed
from
alias
list
bash
aliases
unset
loses
cial
properties
even
subsequently
reset
bash
argc
array
variable
whose
values
number
parameters
each
frame
current
bash
execution
call
stack
number
parameters
current
subroutine
shell
function
script
executed
with
source
stack
when
subroutine
executed
number
parameters
passed
pushed
onto
bash
argc
shell
sets
bash
argc
only
when
extended
debugging
mode
description
extdebug
option
shopt
builtin
below
setting
extdebug
after
shell
started
execute
script
referencing
this
variable
when
extdebug
result
inconsistent
values
bash
argv
array
variable
containing
parameters
current
bash
execution
call
stack
final
rameter
last
subroutine
call
stack
first
parameter
initial
call
bottom
when
subroutine
executed
parameters
supplied
pushed
onto
bash
argv
shell
sets
bash
argv
only
when
extended
debugging
mode
description
extdebug
option
shopt
builtin
below
setting
extdebug
after
shell
started
execute
script
referencing
this
vari
able
when
extdebug
result
inconsistent
values
bash
argv
when
referenced
this
variable
expands
name
shell
shell
script
identical
scription
special
parameter
above
assignment
bash
argv
causes
value
assigned
also
signed
bash
argv
unset
loses
special
properties
even
subsequently
reset
bash
cmds
associative
array
variable
whose
members
correspond
internal
hash
table
commands
maintained
hash
builtin
elements
added
this
array
appear
hash
table
however
unsetting
array
ments
currently
does
cause
command
names
removed
from
hash
table
bash
cmds
unset
loses
special
properties
even
subsequently
reset
bash
command
command
currently
being
executed
about
executed
unless
shell
executing
command
result
trap
which
case
command
executing
time
trap
bash
command
loses
special
properties
even
subsequently
reset
bash
execution
string
command
argument
invocation
option
bash
lineno
array
variable
whose
members
line
numbers
source
files
where
each
corresponding
member
func
name
invoked
bash
lineno
line
number
source
file
bash
source
where
funcname
called
bash
lineno
referenced
within
another
shell
function
lineno
obtain
current
line
number
bash
loadables
path
colon
separated
list
directories
which
shell
looks
dynamically
loadable
builtins
specified
enable
command
bash
rematch
array
variable
whose
members
assigned
binary
operator
conditional
command
element
with
index
portion
string
matching
entire
regular
expression
element
with
index
portion
string
matching
parenthesized
subexpression
bash
source
array
variable
whose
members
source
filenames
where
corresponding
shell
function
names
funcname
array
variable
defined
shell
function
funcname
defined
file
bash
source
called
from
bash
source
bash
subshell
incremented
within
each
subshell
subshell
environment
when
shell
begins
executing
that
envi
ronment
initial
value
bash
subshell
unset
loses
special
properties
even
subsequently
reset
bash
versinfo
readonly
array
variable
whose
members
hold
version
information
this
instance
bash
values
signed
array
members
follows
bash
versinfo
major
version
number
release
bash
versinfo
minor
version
number
version
bash
versinfo
patch
level
bash
versinfo
build
version
bash
versinfo
release
status
beta
bash
versinfo
value
machtype
bash
version
expands
string
describing
version
this
instance
bash
comp
cword
index
into
comp
words
word
containing
current
cursor
position
this
variable
available
only
shell
functions
invoked
programmable
completion
facilities
programmable
completion
comp
final
sequence
used
invoke
current
completion
function
comp
line
current
command
line
this
variable
available
only
shell
functions
external
commands
invoked
programmable
completion
facilities
programmable
completion
below
comp
point
index
current
cursor
position
relative
beginning
current
command
current
cursor
position
current
command
value
this
variable
equal
comp
line
this
variable
available
only
shell
functions
external
commands
invoked
programmable
comple
tion
facilities
programmable
completion
below
comp
type
integer
value
corresponding
type
completion
attempted
that
caused
completion
function
called
normal
completion
listing
completions
after
successive
tabs
listing
alternatives
partial
word
completion
list
completions
word
unmodified
menu
completion
this
variable
available
only
shell
functions
external
commands
invoked
program
mable
completion
facilities
programmable
completion
below
comp
wordbreaks
characters
that
readline
library
treats
word
separators
when
performing
word
completion
comp
wordbreaks
unset
loses
special
properties
even
subsequently
reset
comp
words
array
variable
arrays
below
consisting
individual
words
current
command
line
line
split
into
words
readline
would
split
using
comp
wordbreaks
described
above
this
variable
available
only
shell
functions
invoked
programmable
completion
facilities
programmable
pletion
below
coproc
array
variable
arrays
below
created
hold
file
descriptors
output
from
input
named
coprocess
coprocesses
above
dirstack
array
variable
arrays
below
containing
current
contents
directory
stack
directories
pear
stack
order
they
displayed
dirs
builtin
assigning
members
this
array
variable
used
modify
directories
already
stack
pushd
popd
builtins
must
used
remove
directories
assignment
this
variable
will
change
current
directory
dirstack
unset
loses
special
properties
even
subsequently
reset
epochrealtime
each
time
this
parameter
referenced
expands
number
seconds
since
unix
epoch
time
floating
point
value
with
micro
second
granularity
assignments
epochrealtime
ignored
epochrealtime
unset
loses
special
properties
even
subsequently
reset
epochseconds
each
time
this
parameter
referenced
expands
number
seconds
since
unix
epoch
time
assignments
epochseconds
ignored
epochseconds
unset
loses
special
proper
ties
even
subsequently
reset
euid
expands
effective
user
current
user
initialized
shell
startup
this
variable
read
only
funcname
array
variable
containing
names
shell
functions
currently
execution
call
stack
ement
with
index
name
currently
executing
shell
function
bottom
most
element
with
highest
index
main
this
variable
exists
only
when
shell
function
executing
assign
ments
funcname
have
effect
funcname
unset
loses
special
properties
even
sequently
reset
this
variable
used
with
bash
lineno
bash
source
each
element
funcname
corresponding
ments
bash
lineno
bash
source
describe
call
stack
instance
funcname
called
from
file
bash
source
line
number
bash
lineno
caller
builtin
displays
rent
call
stack
using
this
information
groups
array
variable
containing
list
groups
which
current
user
member
assignments
groups
have
effect
groups
unset
loses
special
properties
even
subsequently
reset
histcmd
history
number
index
history
list
current
command
assignments
histcmd
nored
histcmd
unset
loses
special
properties
even
subsequently
reset
hostname
automatically
name
current
host
hosttype
automatically
string
that
uniquely
describes
type
machine
which
bash
executing
default
system
dependent
lineno
each
time
this
parameter
referenced
shell
substitutes
decimal
number
representing
current
quential
line
number
starting
with
within
script
function
when
script
function
value
substituted
guaranteed
meaningful
lineno
unset
loses
special
properties
even
subsequently
reset
machtype
automatically
string
that
fully
describes
system
type
which
bash
executing
stan
dard
company
system
format
default
system
dependent
mapfile
array
variable
arrays
below
created
hold
text
read
mapfile
builtin
when
variable
name
supplied
oldpwd
previous
working
directory
command
optarg
value
last
option
argument
processed
getopts
builtin
command
shell
builtin
commands
below
optind
index
next
argument
processed
getopts
builtin
command
shell
builtin
commands
ostype
automatically
string
that
describes
operating
system
which
bash
executing
default
system
dependent
pipestatus
array
variable
arrays
below
containing
list
exit
status
values
from
processes
most
recently
executed
foreground
pipeline
which
contain
only
single
command
ppid
process
shell
parent
this
variable
readonly
current
working
directory
command
random
each
time
this
parameter
referenced
expands
random
integer
between
assigning
value
random
initializes
seeds
sequence
random
numbers
random
unset
loses
special
properties
even
subsequently
reset
readline
line
contents
readline
line
buffer
with
bind
shell
builtin
commands
below
readline
mark
position
mark
saved
insertion
point
readline
line
buffer
with
bind
shell
builtin
commands
below
characters
between
insertion
point
mark
often
called
region
readline
point
position
insertion
point
readline
line
buffer
with
bind
shell
builtin
commands
below
reply
line
input
read
read
builtin
command
when
arguments
supplied
seconds
each
time
this
parameter
referenced
number
seconds
since
shell
invocation
returned
value
assigned
seconds
value
returned
upon
subsequent
references
number
seconds
since
signment
plus
value
assigned
number
seconds
shell
invocation
current
time
always
determined
querying
system
clock
seconds
unset
loses
special
properties
even
subsequently
reset
shellopts
colon
separated
list
enabled
shell
options
each
word
list
valid
argument
option
builtin
command
shell
builtin
commands
below
options
appearing
shellopts
those
reported
this
variable
environment
when
bash
starts
each
shell
option
list
will
enabled
before
reading
startup
files
this
variable
read
only
shlvl
incremented
each
time
instance
bash
started
srandom
this
variable
expands
pseudo
random
number
each
time
referenced
random
number
genera
linear
systems
that
support
urandom
random
each
returned
number
rela
tionship
numbers
preceding
random
number
generator
cannot
seeded
assignments
this
variable
have
effect
srandom
unset
loses
special
properties
even
subsequently
reset
expands
user
current
user
initialized
shell
startup
this
variable
readonly
following
variables
used
shell
some
cases
bash
assigns
default
value
variable
these
cases
noted
below
bash
compat
value
used
shell
compatibility
level
shell
compatibility
mode
below
descrip
tion
various
compatibility
levels
their
effects
value
decimal
number
integer
corresponding
desired
compatibility
level
bash
compat
unset
empty
string
compatibility
level
default
current
version
bash
compat
value
that
valid
compatibility
levels
shell
prints
error
message
sets
compatibility
level
default
current
version
valid
values
correspond
compati
bility
levels
described
below
under
bshellcompatibilitymode
example
valid
values
that
correspond
compat
shopt
option
compatibility
level
current
version
also
valid
value
bash
this
parameter
when
bash
executing
shell
script
value
interpreted
filename
taining
commands
initialize
shell
bashrc
value
bash
subjected
parameter
expansion
command
substitution
arithmetic
expansion
before
being
interpreted
filename
path
used
search
resultant
filename
bash
xtracefd
integer
corresponding
valid
file
descriptor
bash
will
write
trace
output
generated
when
enabled
that
file
descriptor
file
descriptor
closed
when
bash
xtracefd
unset
assigned
value
unsetting
bash
xtracefd
assigning
empty
string
causes
trace
output
sent
standard
error
note
that
setting
bash
xtracefd
standard
error
file
descriptor
then
unsetting
will
result
standard
error
being
closed
cdpath
search
path
command
this
colon
separated
list
directories
which
shell
looks
destination
directories
specified
command
sample
value
child
number
exited
child
status
values
shell
remember
bash
will
allow
this
value
decreased
below
posix
mandated
minimum
there
maximum
value
currently
that
this
ceed
minimum
value
system
dependent
columns
used
select
compound
command
determine
terminal
width
when
printing
selection
lists
automati
cally
checkwinsize
option
enabled
interactive
shell
upon
receipt
sigwinch
compreply
array
variable
from
which
bash
reads
possible
completions
generated
shell
function
invoked
programmable
completion
facility
programmable
completion
below
each
array
element
contains
possi
completion
emacs
bash
finds
this
variable
environment
when
shell
starts
with
value
assumes
that
shell
running
emacs
shell
buffer
disables
line
editing
expanded
executed
similarly
bash
invocation
above
when
interactive
shell
invoked
posix
mode
execignore
colon
separated
list
shell
patterns
pattern
matching
defining
list
filenames
ignored
command
search
using
path
files
whose
full
pathnames
match
these
patterns
considered
cutable
files
purposes
completion
command
execution
path
lookup
this
does
affect
behavior
test
commands
full
pathnames
command
hash
table
subject
cignore
this
variable
ignore
shared
library
files
that
have
executable
cutable
files
pattern
matching
honors
setting
extglob
shell
option
fcedit
default
editor
builtin
command
fignore
colon
separated
list
suffixes
ignore
when
performing
filename
completion
readline
below
filename
whose
suffix
matches
entries
fignore
excluded
from
list
matched
filenames
sample
value
quoting
needed
when
assigning
value
this
variable
which
contains
tildes
funcnest
numeric
value
greater
than
defines
maximum
function
nesting
level
function
invocations
that
exceed
this
nesting
level
will
cause
current
command
abort
globignore
colon
separated
list
patterns
defining
file
names
ignored
pathname
expansion
file
name
matched
pathname
expansion
pattern
also
matches
patterns
globignore
moved
from
list
matches
histcontrol
colon
separated
list
values
controlling
commands
saved
history
list
list
includes
ignorespace
lines
which
begin
with
space
character
saved
history
list
value
ignoredups
causes
lines
matching
previous
history
entry
saved
value
ignoreboth
shorthand
ignorespace
ignoredups
value
erasedups
causes
previous
lines
matching
current
line
removed
from
history
list
before
that
line
saved
value
above
list
ignored
histcontrol
unset
does
include
valid
value
lines
read
shell
parser
saved
history
list
subject
value
histignore
second
subsequent
lines
multi
line
compound
command
tested
added
history
regardless
value
histcon
trol
histfile
name
file
which
command
history
saved
history
below
default
value
bash
history
unset
command
history
saved
when
shell
exits
histfilesize
maximum
number
lines
contained
history
file
when
this
variable
assigned
value
tory
file
truncated
necessary
contain
more
than
that
number
lines
removing
oldest
tries
history
file
also
truncated
this
size
after
writing
when
shell
exits
value
history
file
truncated
zero
size
numeric
values
numeric
values
less
than
zero
inhibit
truncation
shell
sets
default
value
value
histsize
after
reading
startup
files
histignore
colon
separated
list
patterns
used
decide
which
command
lines
should
saved
history
list
each
pattern
anchored
beginning
line
must
match
complete
line
implicit
appended
each
pattern
tested
against
line
after
checks
specified
histcontrol
applied
addition
normal
shell
pattern
matching
characters
matches
previous
history
line
escaped
using
backslash
backslash
removed
before
attempting
match
second
subsequent
lines
multi
line
compound
command
tested
added
history
regardless
value
histignore
pattern
matching
honors
setting
extglob
shell
option
histsize
number
commands
remember
command
history
history
below
value
commands
saved
history
list
numeric
values
less
than
zero
result
every
command
being
saved
history
list
there
limit
shell
sets
default
value
after
reading
startup
files
histtimeformat
this
variable
null
value
used
format
string
strftime
print
time
stamp
associated
with
each
history
entry
displayed
history
builtin
this
variable
time
stamps
written
history
file
they
preserved
across
shell
sessions
this
uses
history
comment
character
distinguish
timestamps
from
other
history
lines
home
home
directory
current
user
default
argument
builtin
command
value
this
variable
also
used
when
performing
tilde
expansion
hostfile
contains
name
file
same
format
hosts
that
should
read
when
shell
needs
plete
hostname
list
possible
hostname
completions
changed
while
shell
running
next
time
hostname
completion
attempted
after
value
changed
bash
adds
contents
file
existing
list
hostfile
value
does
name
readable
file
bash
attempts
read
hosts
obtain
list
possible
hostname
completions
when
hostfile
unset
hostname
list
cleared
internal
field
separator
that
used
word
splitting
after
expansion
split
lines
into
words
with
read
builtin
command
default
value
space
newline
ignoreeof
controls
action
interactive
shell
receipt
character
sole
input
value
number
consecutive
characters
which
must
typed
first
characters
input
line
before
bash
exits
variable
exists
does
have
numeric
value
value
fault
value
does
exist
signifies
input
shell
inputrc
filename
readline
startup
file
overriding
default
inputrc
readline
below
inside
emacs
this
variable
appears
environment
when
shell
starts
bash
assumes
that
running
inside
emacs
shell
buffer
disable
line
editing
depending
value
term
lang
used
determine
locale
category
category
specifically
selected
with
variable
starting
with
this
variable
overrides
value
lang
other
variable
specifying
locale
category
collate
this
variable
determines
collation
order
used
when
sorting
results
pathname
expansion
deter
mines
behavior
range
expressions
equivalence
classes
collating
sequences
within
pathname
expan
sion
pattern
matching
ctype
this
variable
determines
interpretation
characters
behavior
character
classes
within
path
name
expansion
pattern
matching
messages
this
variable
determines
locale
used
translate
double
quoted
strings
preceded
numeric
this
variable
determines
locale
category
used
number
formatting
time
this
variable
determines
locale
category
used
data
time
formatting
lines
used
select
compound
command
determine
column
length
printing
selection
lists
automati
cally
checkwinsize
option
enabled
interactive
shell
upon
receipt
sigwinch
mail
this
parameter
file
directory
name
mailpath
variable
bash
informs
user
arrival
mail
specified
file
maildir
format
directory
mailcheck
specifies
often
seconds
bash
checks
mail
default
seconds
when
time
check
mail
shell
does
before
displaying
primary
prompt
this
variable
unset
value
that
number
greater
than
equal
zero
shell
disables
mail
checking
mailpath
colon
separated
list
filenames
checked
mail
message
printed
when
mail
arrives
particular
file
specified
separating
filename
from
message
with
when
used
text
message
expands
name
current
mailfile
example
mailpath
mail
bfox
have
mail
shell
mail
mail
bash
configured
supply
default
value
this
variable
there
value
default
location
user
mail
files
that
uses
system
dependent
mail
user
opterr
value
bash
displays
error
messages
generated
getopts
builtin
command
shell
builtin
commands
below
opterr
initialized
each
time
shell
invoked
shell
script
cuted
path
search
path
commands
colon
separated
list
directories
which
shell
looks
mands
command
execution
below
zero
length
null
directory
name
value
path
indicates
current
directory
null
directory
name
appear
adjacent
colons
initial
trailing
colon
default
path
system
dependent
administrator
installs
bash
common
value
local
local
sbin
sbin
sbin
posixly
correct
this
variable
environment
when
bash
starts
shell
enters
posix
mode
before
reading
startup
files
posix
invocation
option
been
supplied
while
shell
ning
bash
enables
posix
mode
command
posix
been
executed
when
shell
enters
posix
mode
sets
this
variable
already
prompt
command
this
variable
array
value
each
element
executed
command
prior
suing
each
primary
prompt
this
array
variable
value
used
command
cute
instead
prompt
dirtrim
number
greater
than
zero
value
used
number
trailing
directory
components
tain
when
expanding
prompt
string
escapes
prompting
below
characters
removed
placed
with
ellipsis
value
this
parameter
expanded
prompting
below
displayed
interactive
shells
after
read
command
before
command
executed
value
this
parameter
expanded
prompting
below
used
primary
prompt
string
fault
value
value
this
parameter
expanded
with
used
secondary
prompt
string
default
value
this
parameter
used
prompt
select
command
shell
grammar
above
value
this
parameter
expanded
with
value
printed
before
each
command
bash
plays
during
execution
trace
first
character
expanded
value
replicated
multiple
times
necessary
indicate
multiple
levels
indirection
default
shell
this
variable
expands
full
pathname
shell
when
shell
starts
bash
signs
full
pathname
current
user
login
shell
timeformat
value
this
parameter
used
format
string
specifying
timing
information
pipelines
prefixed
with
time
reserved
word
should
displayed
character
introduces
escape
sequence
that
expanded
time
value
other
information
escape
sequences
their
meanings
follows
braces
denote
optional
portions
literal
elapsed
time
seconds
number
seconds
spent
user
mode
number
seconds
spent
system
mode
percentage
computed
optional
digit
specifying
precision
number
fractional
digits
after
decimal
point
value
causes
decimal
point
fraction
output
most
three
places
after
decimal
point
specified
values
greater
than
changed
specified
value
used
optional
specifies
longer
format
including
minutes
form
mmmss
value
deter
mines
whether
fraction
included
this
variable
bash
acts
value
nreal
nuser
nsys
value
null
timing
information
displayed
trailing
newline
added
when
format
string
displayed
tmout
value
greater
than
zero
tmout
treated
default
timeout
read
builtin
lect
command
terminates
input
does
arrive
after
tmout
seconds
when
input
coming
from
terminal
interactive
shell
value
interpreted
number
seconds
wait
line
input
after
issuing
primary
prompt
bash
terminates
after
waiting
that
number
seconds
complete
line
input
does
arrive
tmpdir
bash
uses
value
name
directory
which
bash
creates
temporary
files
shell
auto
resume
this
variable
controls
shell
interacts
with
user
control
this
variable
word
simple
commands
without
redirections
treated
candidates
resumption
existing
stopped
there
ambiguity
allowed
there
more
than
beginning
with
string
typed
most
recently
accessed
selected
name
stopped
this
context
command
line
used
start
value
exact
string
supplied
must
match
name
stopped
exactly
substring
string
supplied
needs
match
substring
name
stopped
substring
value
provides
functionality
analogous
identifier
control
below
other
value
supplied
string
must
prefix
stopped
name
this
provides
functionality
analo
gous
string
identifier
histchars
three
characters
which
control
history
expansion
tokenization
history
expansion
below
first
character
history
expansion
character
character
which
signals
start
history
expansion
normally
second
character
quick
substitution
character
which
used
short
hand
running
previous
command
entered
substituting
string
another
command
default
optional
third
character
character
which
indicates
that
remainder
line
comment
when
found
first
character
word
normally
history
comment
character
causes
history
substitution
skipped
remaining
words
line
does
necessarily
cause
shell
parser
treat
rest
line
comment
arrays
bash
provides
dimensional
indexed
associative
array
variables
variable
used
indexed
declare
builtin
will
explicitly
declare
array
there
maximum
limit
size
array
requirement
that
members
indexed
assigned
contiguously
indexed
arrays
referenced
using
integers
cluding
arithmetic
expressions
zero
based
associative
arrays
referenced
using
arbitrary
strings
less
otherwise
noted
indexed
array
indices
must
negative
integers
indexed
array
created
automatically
variable
assigned
using
syntax
name
subscript
value
subscript
treated
arithmetic
expression
that
must
evaluate
number
explicitly
declare
dexed
array
declare
name
shell
builtin
commands
below
declare
name
subscript
also
accepted
subscript
ignored
associative
arrays
created
using
declare
name
attributes
specified
array
variable
using
declare
readonly
builtins
each
attribute
applies
members
array
arrays
assigned
using
compound
assignments
form
name
value
valuen
where
each
value
form
subscript
string
indexed
array
assignments
require
anything
string
each
value
list
expanded
using
shell
expansions
described
below
under
expansion
when
assigning
indexed
arrays
optional
brackets
subscript
supplied
that
index
assigned
otherwise
index
element
signed
last
index
assigned
statement
plus
indexing
starts
zero
when
assigning
associative
array
words
compound
assignment
either
assignment
statements
which
subscript
required
list
words
that
interpreted
sequence
alternating
keys
name
value
value
these
treated
identically
name
value
value
first
word
list
determines
remaining
words
interpreted
assignments
list
must
same
type
when
using
value
pairs
keys
missing
empty
final
missing
value
treated
like
empty
string
this
syntax
also
accepted
declare
builtin
individual
array
elements
assigned
using
name
subscript
value
syntax
introduced
above
when
assigning
indexed
array
name
subscripted
ative
number
that
number
interpreted
relative
greater
than
maximum
index
name
negative
dices
count
back
from
array
index
references
last
element
element
array
referenced
using
name
subscript
braces
required
avoid
conflicts
with
pathname
expansion
subscript
word
expands
members
name
these
subscripts
differ
only
when
word
appears
within
double
quotes
word
double
quoted
name
expands
single
word
with
value
each
array
member
separated
first
character
special
variable
name
expands
each
element
name
separate
word
when
there
array
members
name
expands
nothing
double
quoted
expansion
occurs
within
word
expansion
first
parameter
joined
with
beginning
part
original
word
expansion
last
parameter
joined
with
last
part
original
word
this
analogous
expansion
special
parameters
special
parameters
above
name
script
expands
length
name
subscript
subscript
expansion
number
ments
array
subscript
used
reference
element
indexed
array
evaluates
number
less
than
zero
interpreted
relative
greater
than
maximum
index
array
negative
indices
count
back
from
array
index
references
last
element
referencing
array
variable
without
subscript
equivalent
referencing
array
with
subscript
reference
variable
using
valid
subscript
legal
bash
will
create
array
necessary
array
variable
considered
subscript
been
assigned
value
null
string
valid
value
possible
obtain
keys
indices
array
well
values
name
name
expand
indices
assigned
array
variable
name
treatment
when
double
quotes
similar
expansion
special
parameters
within
double
quotes
unset
builtin
used
destroy
arrays
unset
name
subscript
destroys
array
element
index
subscript
both
indexed
associative
arrays
negative
subscripts
indexed
arrays
interpreted
described
above
unsetting
last
element
array
variable
does
unset
variable
unset
name
where
name
array
unset
name
subscript
where
subscript
removes
entire
array
when
using
variable
name
with
subscript
argument
command
such
with
unset
without
using
word
expansion
syntax
described
above
argument
subject
pathname
expansion
pathname
expansion
sired
argument
should
quoted
declare
local
readonly
builtins
each
accept
option
specify
indexed
array
option
specify
associative
array
both
options
supplied
takes
precedence
read
builtin
accepts
tion
assign
list
words
read
from
standard
input
array
declare
builtins
display
array
values
that
allows
them
reused
assignments
expansion
expansion
performed
command
line
after
been
split
into
words
there
seven
kinds
expansion
performed
brace
expansion
tilde
expansion
parameter
variable
expansion
command
substitution
arithmetic
pansion
word
splitting
pathname
expansion
order
expansions
brace
expansion
tilde
expansion
parameter
variable
expansion
arithmetic
expan
sion
command
substitution
done
left
right
fashion
word
splitting
pathname
expansion
systems
that
support
there
additional
expansion
available
process
substitution
this
performed
same
time
tilde
parameter
variable
arithmetic
expansion
command
substitution
after
these
expansions
performed
quote
characters
present
original
word
removed
unless
they
have
been
quoted
themselves
quote
removal
only
brace
expansion
word
splitting
pathname
expansion
increase
number
words
expansion
other
expansions
expand
single
word
single
word
only
exceptions
this
expansions
name
most
cases
name
explained
above
parameters
brace
expansion
brace
expansion
mechanism
which
arbitrary
strings
generated
this
mechanism
similar
pathname
expansion
filenames
generated
need
exist
patterns
brace
expanded
take
form
optional
preamble
followed
either
series
comma
separated
strings
sequence
expression
between
pair
braces
followed
optional
postscript
preamble
prefixed
each
string
contained
within
braces
postscript
then
appended
each
resulting
string
expanding
left
right
brace
expansions
nested
results
each
expanded
string
sorted
left
right
order
served
example
expands
into
sequence
expression
takes
form
incr
where
either
integers
single
characters
incr
optional
increment
integer
when
integers
supplied
expression
expands
each
number
tween
inclusive
supplied
integers
prefixed
with
force
each
term
have
same
width
when
either
begins
with
zero
shell
attempts
force
generated
terms
contain
same
number
zero
padding
where
necessary
when
characters
supplied
expression
expands
each
character
lexico
graphically
between
inclusive
using
default
locale
note
that
both
must
same
type
when
increment
supplied
used
difference
between
each
term
default
increment
appropriate
brace
expansion
performed
before
other
expansions
characters
special
other
expansions
served
result
strictly
textual
bash
does
apply
syntactic
interpretation
context
expansion
text
between
braces
correctly
formed
brace
expansion
must
contain
unquoted
opening
closing
braces
least
unquoted
comma
valid
sequence
expression
incorrectly
formed
brace
expansion
left
unchanged
quoted
with
backslash
prevent
being
considered
part
brace
expression
avoid
conflicts
with
parameter
pansion
string
considered
eligible
brace
expansion
inhibits
brace
expansion
until
clos
this
construct
typically
used
shorthand
when
common
prefix
strings
generated
longer
than
above
example
mkdir
local
bash
dist
bugs
chown
root
edit
brace
expansion
introduces
slight
incompatibility
with
historical
versions
does
treat
opening
closing
braces
specially
when
they
appear
part
word
preserves
them
output
bash
removes
braces
from
words
consequence
brace
expansion
example
word
entered
file
appears
identically
output
same
word
output
file
file
after
expansion
bash
strict
compatibility
with
desired
start
bash
with
option
disable
brace
expansion
with
option
command
shell
builtin
commands
below
tilde
expansion
word
begins
with
unquoted
tilde
character
characters
preceding
first
unquoted
slash
characters
there
unquoted
slash
considered
tilde
prefix
none
characters
tilde
prefix
quoted
characters
tilde
prefix
following
tilde
treated
possible
login
name
this
login
name
null
string
tilde
replaced
with
value
shell
parameter
home
home
unset
home
directory
user
executing
shell
substituted
instead
otherwise
tilde
replaced
with
home
directory
associated
with
specified
login
name
tilde
prefix
value
shell
variable
replaces
tilde
prefix
tilde
prefix
value
shell
variable
oldpwd
substituted
characters
following
tilde
tilde
prefix
consist
number
optionally
prefixed
tilde
prefix
replaced
with
corresponding
element
from
directory
stack
would
displayed
dirs
builtin
invoked
with
tilde
prefix
argument
characters
following
tilde
tilde
prefix
consist
number
without
leading
assumed
login
name
invalid
tilde
expansion
fails
word
unchanged
each
variable
assignment
checked
unquoted
tilde
prefixes
immediately
following
first
these
cases
tilde
expansion
also
performed
consequently
filenames
with
tildes
assignments
path
mailpath
cdpath
shell
assigns
expanded
value
bash
also
performs
tilde
expansion
words
satisfying
conditions
variable
assignments
described
above
under
parameters
when
they
appear
arguments
simple
commands
bash
does
this
except
declara
tion
commands
listed
above
when
posix
mode
parameter
expansion
character
introduces
parameter
expansion
command
substitution
arithmetic
expansion
parameter
name
symbol
expanded
enclosed
braces
which
optional
serve
protect
variable
panded
from
characters
immediately
following
which
could
interpreted
part
name
when
braces
used
matching
ending
brace
first
escaped
backslash
within
quoted
string
within
embedded
arithmetic
expansion
command
substitution
parameter
expansion
parameter
value
parameter
substituted
braces
required
when
parameter
positional
parameter
with
more
than
digit
when
parameter
followed
character
which
interpreted
part
name
parameter
shell
parameter
described
above
parameters
array
reference
arrays
first
character
parameter
exclamation
point
parameter
nameref
introduces
level
indirection
bash
uses
value
formed
expanding
rest
parameter
parameter
this
then
expanded
that
value
used
rest
expansion
rather
than
expansion
original
parame
this
known
indirect
expansion
value
subject
tilde
expansion
parameter
expansion
command
substitution
arithmetic
expansion
parameter
nameref
this
expands
name
parameter
refer
enced
parameter
instead
performing
complete
indirect
expansion
exceptions
this
expansions
prefix
name
described
below
exclamation
point
must
immediately
follow
left
brace
introduce
indirection
each
cases
below
word
subject
tilde
expansion
parameter
expansion
command
substitution
arithmetic
expansion
when
performing
substring
expansion
using
forms
documented
below
bash
tests
parameter
that
unset
null
omitting
colon
results
test
only
parameter
that
unset
parameter
word
default
values
parameter
unset
null
expansion
word
substituted
otherwise
value
parameter
substituted
parameter
word
assign
default
values
parameter
unset
null
expansion
word
assigned
parameter
value
parameter
then
substituted
positional
parameters
special
parameters
assigned
this
parameter
word
display
error
null
unset
parameter
null
unset
expansion
word
message
that
effect
word
present
written
standard
error
shell
interactive
otherwise
value
parameter
substituted
parameter
word
alternate
value
parameter
null
unset
nothing
substituted
otherwise
expansion
word
substituted
parameter
offset
parameter
offset
length
substring
expansion
expands
length
characters
value
parameter
starting
character
specified
offset
parameter
indexed
array
subscripted
associative
array
name
results
differ
described
below
length
omitted
expands
substring
value
parameter
starting
character
specified
offset
extending
value
length
offset
arithmetic
expressions
arithmetic
evaluation
below
offset
evaluates
number
less
than
zero
value
used
offset
characters
from
value
parameter
length
evaluates
number
less
than
zero
interpreted
offset
characters
from
value
parameter
rather
than
number
characters
expansion
characters
between
offset
that
result
note
that
negative
offset
must
separated
from
colon
least
space
avoid
being
confused
with
expansion
parameter
result
length
positional
parameters
beginning
offset
negative
offset
taken
relative
greater
than
greatest
positional
parameter
offset
evaluates
last
positional
parameter
expansion
error
length
evaluates
number
less
than
zero
parameter
indexed
array
name
subscripted
result
length
members
array
beginning
with
parameter
offset
negative
offset
taken
relative
greater
than
maximum
specified
array
expansion
error
length
evaluates
number
less
than
zero
substring
expansion
applied
associative
array
produces
undefined
results
substring
indexing
zero
based
unless
positional
parameters
used
which
case
indexing
starts
default
offset
positional
parameters
used
prefixed
list
prefix
prefix
names
matching
prefix
expands
names
variables
whose
names
begin
with
prefix
separated
first
character
special
variable
when
used
expansion
appears
within
double
quotes
each
variable
name
expands
separate
word
name
name
list
array
keys
name
array
variable
expands
list
array
indices
keys
assigned
name
name
array
expands
name
null
otherwise
when
used
pansion
appears
within
double
quotes
each
expands
separate
word
parameter
parameter
length
length
characters
value
parameter
substituted
parameter
value
substituted
number
positional
parameters
parameter
array
name
subscripted
value
substituted
number
elements
array
parameter
indexed
array
name
subscripted
negative
number
that
number
interpreted
relative
greater
than
maximum
index
parameter
negative
indices
count
back
from
array
index
references
last
element
parameter
word
parameter
word
remove
matching
prefix
pattern
word
expanded
produce
pattern
just
pathname
expansion
matched
against
expanded
value
parameter
using
rules
described
under
pattern
matching
below
pattern
matches
beginning
value
parameter
then
result
expansion
expanded
value
parameter
with
shortest
matching
pattern
case
longest
matching
pattern
case
deleted
parameter
pattern
removal
operation
applied
each
positional
parameter
turn
expansion
resultant
list
parameter
array
variable
subscripted
with
pattern
removal
operation
applied
each
member
array
turn
expansion
resultant
list
parameter
word
parameter
word
remove
matching
suffix
pattern
word
expanded
produce
pattern
just
pathname
expansion
matched
against
expanded
value
parameter
using
rules
described
under
pattern
matching
below
pattern
matches
trailing
portion
expanded
value
parameter
then
result
expansion
expanded
value
parameter
with
shortest
matching
pattern
case
longest
match
pattern
case
deleted
parameter
pattern
removal
operation
applied
each
positional
parameter
turn
expansion
resultant
list
parameter
array
vari
able
subscripted
with
pattern
removal
operation
applied
each
member
array
turn
expansion
resultant
list
parameter
pattern
string
pattern
substitution
pattern
expanded
produce
pattern
just
pathname
expansion
parameter
expanded
longest
match
pattern
against
value
replaced
with
string
match
formed
using
rules
described
under
pattern
matching
below
pattern
begins
with
matches
tern
replaced
with
string
normally
only
first
match
replaced
pattern
begins
with
must
match
beginning
expanded
value
parameter
pattern
begins
with
must
match
expanded
value
parameter
string
null
matches
pattern
deleted
follow
pattern
omitted
nocasematch
shell
option
enabled
match
performed
without
gard
case
alphabetic
characters
parameter
substitution
operation
applied
each
positional
parameter
turn
expansion
resultant
list
parameter
array
vari
able
subscripted
with
substitution
operation
applied
each
member
array
turn
expansion
resultant
list
parameter
pattern
parameter
pattern
parameter
pattern
parameter
pattern
case
modification
this
expansion
modifies
case
alphabetic
characters
parameter
pattern
expanded
produce
pattern
just
pathname
expansion
each
character
expanded
value
parame
tested
against
pattern
matches
pattern
case
converted
pattern
should
attempt
match
more
than
character
operator
converts
lowercase
letters
matching
pattern
percase
operator
converts
matching
uppercase
letters
lowercase
expansions
convert
each
matched
character
expanded
value
expansions
match
convert
only
first
charac
expanded
value
pattern
omitted
treated
like
which
matches
every
character
parameter
case
modification
operation
applied
each
positional
parameter
turn
expansion
resultant
list
parameter
array
variable
subscripted
with
case
modifi
cation
operation
applied
each
member
array
turn
expansion
resultant
list
parameter
operator
parameter
transformation
expansion
either
transformation
value
parameter
information
about
parameter
itself
depending
value
operator
each
operator
single
letter
expansion
string
that
value
parameter
with
lowercase
alphabetic
characters
verted
uppercase
expansion
string
that
value
parameter
with
first
character
converted
upper
case
alphabetic
expansion
string
that
value
parameter
with
uppercase
alphabetic
characters
verted
lowercase
expansion
string
that
value
parameter
quoted
format
that
reused
expansion
string
that
value
parameter
with
backslash
escape
sequences
expanded
with
quoting
mechanism
expansion
string
that
result
expanding
value
parameter
were
prompt
string
prompting
below
expansion
string
form
assignment
statement
declare
command
that
evalu
ated
will
recreate
parameter
with
attributes
value
produces
possibly
quoted
version
value
parameter
except
that
prints
values
dexed
associative
arrays
sequence
quoted
value
pairs
arrays
above
expansion
string
consisting
flag
values
representing
parameter
attributes
parameter
operation
applied
each
positional
parameter
turn
expansion
resultant
list
parameter
array
variable
subscripted
with
operation
applied
each
member
array
turn
expansion
resultant
list
result
expansion
subject
word
splitting
pathname
expansion
described
below
command
substitution
command
substitution
allows
output
command
replace
command
name
there
forms
command
command
bash
performs
expansion
executing
command
subshell
environment
replacing
command
substitution
with
standard
output
command
with
trailing
newlines
deleted
embedded
newlines
deleted
they
removed
during
word
splitting
command
substitution
file
replaced
equivalent
faster
file
when
style
backquote
form
substitution
used
backslash
retains
literal
meaning
except
when
lowed
first
backquote
preceded
backslash
terminates
command
substitution
when
command
form
characters
between
parentheses
make
command
none
treated
specially
command
substitutions
nested
nest
when
using
backquoted
form
escape
inner
backquotes
with
back
slashes
substitution
appears
within
double
quotes
word
splitting
pathname
expansion
performed
sults
arithmetic
expansion
arithmetic
expansion
allows
evaluation
arithmetic
expression
substitution
result
arithmetic
expansion
expression
format
expression
deprecated
will
removed
upcoming
versions
bash
expression
treated
were
within
double
quotes
double
quote
inside
parentheses
treated
specially
tokens
expression
undergo
parameter
variable
expansion
command
substitution
quote
removal
result
treated
arithmetic
expression
evaluated
arithmetic
expansions
nested
evaluation
performed
according
rules
listed
below
under
arithmetic
evaluation
expression
valid
bash
prints
message
indicating
failure
substitution
occurs
process
substitution
process
substitution
allows
process
input
output
referred
using
filename
takes
form
list
list
process
list
asynchronously
input
output
appears
filename
this
filename
passed
argument
current
command
result
expansion
list
form
used
writing
file
will
provide
input
list
list
form
used
file
passed
argument
should
read
obtain
output
list
process
substitution
supported
systems
that
support
named
pipes
fifos
method
naming
open
files
when
available
process
substitution
performed
simultaneously
with
parameter
variable
expansion
command
stitution
arithmetic
expansion
word
splitting
shell
scans
results
parameter
expansion
command
substitution
arithmetic
expansion
that
within
double
quotes
word
splitting
shell
treats
each
character
delimiter
splits
results
other
expansions
into
words
these
characters
field
terminators
unset
value
exactly
space
newline
fault
then
sequences
space
newline
beginning
results
previous
pansions
ignored
sequence
characters
beginning
serves
delimit
words
value
other
than
default
then
sequences
whitespace
characters
space
newline
nored
beginning
word
long
whitespace
character
value
whitespace
character
character
that
whitespace
along
with
adjacent
whitespace
characters
delimits
field
sequence
whitespace
characters
also
treated
delimiter
value
null
word
splitting
occurs
explicit
null
arguments
retained
passed
commands
empty
strings
unquoted
implicit
null
guments
resulting
from
expansion
parameters
that
have
values
removed
parameter
with
value
expanded
within
double
quotes
null
argument
results
retained
passed
command
empty
string
when
quoted
null
argument
appears
part
word
whose
expansion
null
null
argument
moved
that
word
becomes
after
word
splitting
null
argument
removal
note
that
expansion
occurs
splitting
performed
pathname
expansion
after
word
splitting
unless
option
been
bash
scans
each
word
characters
these
characters
appears
quoted
then
word
regarded
pattern
replaced
with
phabetically
sorted
list
filenames
matching
pattern
pattern
matching
below
matching
filenames
found
shell
option
nullglob
enabled
word
left
unchanged
nullglob
option
matches
found
word
removed
failglob
shell
option
matches
found
error
message
printed
command
executed
shell
option
nocaseglob
enabled
match
performed
without
regard
case
alphabetic
characters
note
that
when
using
range
expressions
like
below
letters
other
case
included
depending
setting
collate
when
pattern
used
pathname
expansion
character
start
name
immediately
following
slash
must
matched
explicitly
unless
shell
option
dotglob
filenames
must
always
matched
explicitly
even
dotglob
other
cases
character
treated
specially
when
matching
pathname
slash
character
must
always
matched
explicitly
slash
pattern
other
matching
contexts
matched
special
pattern
character
described
below
under
pattern
matching
scription
shopt
below
under
shell
builtin
commands
description
nocaseglob
nullglob
failglob
dotglob
shell
options
globignore
shell
variable
used
restrict
file
names
matching
pattern
globignore
each
matching
file
name
that
also
matches
patterns
globignore
removed
from
list
matches
nocaseglob
option
matching
against
patterns
globignore
performed
without
gard
case
filenames
always
ignored
when
globignore
null
however
setting
globignore
null
value
effect
enabling
dotglob
shell
option
other
filenames
beginning
with
will
match
behavior
ignoring
filenames
beginning
with
make
patterns
globignore
dotglob
option
disabled
when
globignore
unset
pattern
matching
honors
setting
extglob
shell
option
pattern
matching
character
that
appears
pattern
other
than
special
pattern
characters
described
below
matches
itself
character
occur
pattern
backslash
escapes
following
character
escaping
backslash
discarded
when
matching
special
pattern
characters
must
quoted
they
matched
literally
special
pattern
characters
have
following
meanings
matches
string
including
null
string
when
globstar
shell
option
enabled
used
pathname
expansion
context
adjacent
used
single
pattern
will
match
files
zero
more
directories
subdirectories
followed
adjacent
will
match
only
directories
subdirectories
matches
single
character
matches
enclosed
characters
pair
characters
separated
hyphen
denotes
range
expression
character
that
falls
between
those
characters
inclusive
using
current
locale
collating
sequence
character
matched
first
character
following
then
character
enclosed
matched
sorting
order
characters
range
pressions
determined
current
locale
values
collate
shell
vari
ables
obtain
traditional
interpretation
range
expressions
where
equiva
lent
abcd
value
shell
variable
enable
globasciiranges
shell
tion
matched
including
first
last
character
matched
including
first
character
within
character
classes
specified
using
syntax
class
where
class
following
classes
defined
posix
standard
alnum
alpha
ascii
blank
cntrl
digit
graph
lower
print
punct
space
upper
word
xdigit
character
class
matches
character
belonging
that
class
word
character
class
matches
letters
digits
character
within
equivalence
class
specified
using
syntax
which
matches
char
acters
with
same
collation
weight
defined
current
locale
character
within
syntax
symbol
matches
collating
symbol
symbol
extglob
shell
option
enabled
using
shopt
builtin
several
extended
pattern
matching
operators
ognized
following
description
pattern
list
list
more
patterns
separated
compos
patterns
formed
using
more
following
patterns
pattern
list
matches
zero
occurrence
given
patterns
pattern
list
matches
zero
more
occurrences
given
patterns
pattern
list
matches
more
occurrences
given
patterns
pattern
list
matches
given
patterns
pattern
list
matches
anything
except
given
patterns
complicated
extended
pattern
matching
against
long
strings
slow
especially
when
patterns
contain
alterna
tions
strings
contain
multiple
matches
using
separate
matches
against
shorter
strings
using
arrays
strings
instead
single
long
string
faster
quote
removal
after
preceding
expansions
unquoted
occurrences
characters
that
result
from
above
expansions
removed
redirection
before
command
executed
input
output
redirected
using
special
notation
interpreted
shell
redirection
allows
commands
file
handles
duplicated
opened
closed
made
refer
different
files
change
files
command
reads
from
writes
redirection
also
used
modify
file
handles
current
shell
execution
environment
following
redirection
operators
precede
appear
where
within
simple
command
follow
command
redirections
processed
order
they
appear
from
left
right
each
redirection
that
preceded
file
descriptor
number
instead
preceded
word
form
varname
this
case
each
redirection
operator
except
shell
will
allocate
file
descrip
greater
than
equal
assign
varname
preceded
varname
value
name
defines
file
descriptor
close
varname
supplied
redirection
persists
beyond
scope
command
allowing
shell
programmer
manage
file
descriptor
himself
following
descriptions
file
descriptor
number
omitted
first
character
redirection
operator
redirection
refers
standard
input
file
descriptor
first
character
direction
operator
redirection
refers
standard
output
file
descriptor
word
following
redirection
operator
following
descriptions
unless
otherwise
noted
subjected
brace
expansion
tilde
expansion
parameter
variable
expansion
command
substitution
arithmetic
expansion
quote
removal
pathname
expansion
word
splitting
expands
more
than
word
bash
reports
error
note
that
order
redirections
significant
example
command
dirlist
directs
both
standard
output
standard
error
file
dirlist
while
command
dirlist
directs
only
standard
output
file
dirlist
because
standard
error
duplicated
from
standard
output
before
standard
output
redirected
dirlist
bash
handles
several
filenames
specially
when
they
used
redirections
described
following
table
operating
system
which
bash
running
provides
these
special
files
bash
will
them
otherwise
will
emulate
them
internally
with
behavior
described
below
valid
integer
file
descriptor
duplicated
stdin
file
descriptor
duplicated
stdout
file
descriptor
duplicated
stderr
file
descriptor
duplicated
host
port
host
valid
hostname
internet
address
port
integer
port
number
service
name
bash
attempts
open
corresponding
socket
host
port
host
valid
hostname
internet
address
port
integer
port
number
service
name
bash
attempts
open
corresponding
socket
failure
open
create
file
causes
redirection
fail
redirections
using
file
descriptors
greater
than
should
used
with
care
they
conflict
with
file
descrip
tors
shell
uses
internally
note
that
exec
builtin
command
make
redirections
take
effect
current
shell
redirecting
input
redirection
input
causes
file
whose
name
results
from
expansion
word
opened
reading
file
descriptor
standard
input
file
descriptor
specified
general
format
redirecting
input
word
redirecting
output
redirection
output
causes
file
whose
name
results
from
expansion
word
opened
writing
file
descriptor
standard
output
file
descriptor
specified
file
does
exist
created
does
exist
truncated
zero
size
general
format
redirecting
output
word
redirection
operator
noclobber
option
builtin
been
enabled
redirection
will
fail
file
whose
name
results
from
expansion
word
exists
regular
file
redirection
erator
redirection
operator
noclobber
option
builtin
command
enabled
redirection
attempted
even
file
named
word
exists
appending
redirected
output
redirection
output
this
fashion
causes
file
whose
name
results
from
expansion
word
opened
appending
file
descriptor
standard
output
file
descriptor
specified
file
does
exist
created
general
format
appending
output
word
redirecting
standard
output
standard
error
this
construct
allows
both
standard
output
file
descriptor
standard
error
output
file
descriptor
redirected
file
whose
name
expansion
word
there
formats
redirecting
standard
output
standard
error
word
word
forms
first
preferred
this
semantically
equivalent
word
when
using
second
form
word
expand
number
does
other
redirection
operators
apply
duplicating
file
descriptors
below
compatibility
reasons
appending
standard
output
standard
error
this
construct
allows
both
standard
output
file
descriptor
standard
error
output
file
descriptor
appended
file
whose
name
expansion
word
format
appending
standard
output
standard
error
word
this
semantically
equivalent
word
duplicating
file
descriptors
below
here
documents
this
type
redirection
instructs
shell
read
input
from
current
source
until
line
containing
only
limiter
with
trailing
blanks
seen
lines
read
that
point
then
used
standard
file
descriptor
specified
command
format
here
documents
word
here
document
delimiter
parameter
variable
expansion
command
substitution
arithmetic
expansion
pathname
expansion
performed
word
part
word
quoted
delimiter
result
quote
removal
word
lines
here
document
expanded
word
unquoted
lines
here
document
subjected
parameter
pansion
command
substitution
arithmetic
expansion
character
sequence
newline
ignored
must
used
quote
characters
redirection
operator
then
leading
characters
stripped
from
input
lines
line
taining
delimiter
this
allows
here
documents
within
shell
scripts
indented
natural
fashion
here
strings
variant
here
documents
format
word
word
undergoes
tilde
expansion
parameter
variable
expansion
command
substitution
arithmetic
expansion
quote
removal
pathname
expansion
word
splitting
performed
result
supplied
single
string
with
newline
appended
command
standard
input
file
descriptor
specified
duplicating
file
descriptors
redirection
operator
word
used
duplicate
input
file
descriptors
word
expands
more
digits
file
descriptor
denoted
made
copy
that
file
descriptor
digits
word
specify
file
descriptor
open
redirection
error
occurs
word
evaluates
file
descriptor
closed
specified
standard
input
file
descriptor
used
operator
word
used
similarly
duplicate
output
file
descriptors
specified
standard
output
file
descriptor
used
digits
word
specify
file
descriptor
open
output
redirection
error
occurs
word
evaluates
file
descriptor
closed
special
case
omitted
word
does
expand
more
digits
standard
output
standard
error
redirected
described
previously
moving
file
descriptors
redirection
operator
digit
moves
file
descriptor
digit
file
descriptor
standard
input
file
descriptor
speci
fied
digit
closed
after
being
duplicated
similarly
redirection
operator
digit
moves
file
descriptor
digit
file
descriptor
standard
output
file
descriptor
speci
fied
opening
file
descriptors
reading
writing
redirection
operator
word
causes
file
whose
name
expansion
word
opened
both
reading
writing
file
descriptor
file
descriptor
specified
file
does
exist
created
aliases
aliases
allow
string
substituted
word
when
used
first
word
simple
command
shell
maintains
list
aliases
that
unset
with
alias
unalias
builtin
commands
shell
builtin
commands
below
first
word
each
simple
command
unquoted
checked
alias
that
word
replaced
text
alias
characters
shell
metachar
acters
quoting
characters
listed
above
appear
alias
name
replacement
text
contain
valid
shell
input
including
shell
metacharacters
first
word
replacement
text
tested
aliases
word
that
identical
alias
being
expanded
expanded
second
time
this
means
that
alias
instance
bash
does
recursively
expand
replacement
text
last
character
alias
value
blank
then
next
command
word
following
alias
also
checked
alias
expansion
aliases
created
listed
with
alias
command
removed
with
unalias
command
there
mechanism
using
arguments
replacement
text
arguments
needed
shell
function
should
used
functions
below
aliases
expanded
when
shell
interactive
unless
expand
aliases
shell
option
using
shopt
description
shopt
under
shell
builtin
commands
below
rules
concerning
definition
aliases
somewhat
confusing
bash
always
reads
least
plete
line
input
lines
that
make
compound
command
before
executing
commands
that
line
compound
command
aliases
expanded
when
command
read
when
executed
therefore
alias
definition
appearing
same
line
another
command
does
take
effect
until
next
line
input
read
commands
following
alias
definition
that
line
affected
alias
this
behavior
also
issue
when
functions
executed
aliases
expanded
when
function
definition
read
when
function
executed
because
function
definition
itself
command
consequence
aliases
defined
function
available
until
after
that
function
executed
safe
always
alias
definitions
separate
line
alias
compound
commands
almost
every
purpose
aliases
superseded
shell
functions
functions
shell
function
defined
described
above
under
shell
grammar
stores
series
commands
later
execution
when
name
shell
function
used
simple
command
name
list
commands
associated
with
that
func
tion
name
executed
functions
executed
context
current
shell
process
created
terpret
them
contrast
this
with
execution
shell
script
when
function
executed
arguments
function
become
positional
parameters
during
execution
special
parameter
updated
reflect
change
special
parameter
unchanged
first
element
funcname
variable
name
function
while
function
executing
other
aspects
shell
execution
environment
identical
between
function
caller
with
these
ceptions
debug
return
traps
description
trap
builtin
under
shell
builtin
commands
below
inherited
unless
function
been
given
trace
attribute
description
declare
builtin
below
functrace
shell
option
been
enabled
with
builtin
which
case
functions
inherit
debug
return
traps
trap
inherited
unless
errtrace
shell
option
been
enabled
variables
local
function
declared
with
local
builtin
command
ordinarily
variables
their
values
shared
between
function
caller
variable
declared
local
variable
visible
scope
restricted
that
function
children
including
functions
calls
local
variables
shadow
variables
with
same
name
declared
previous
scopes
instance
local
variable
declared
function
hides
global
variable
same
name
references
assignments
refer
local
variable
leaving
global
variable
unmodified
when
function
returns
global
variable
once
again
visible
shell
uses
dynamic
scoping
control
variable
visibility
within
functions
with
dynamic
scoping
visible
variables
their
values
result
sequence
function
calls
that
caused
execution
reach
current
function
value
variable
that
function
sees
depends
value
within
caller
whether
that
caller
global
scope
another
shell
function
this
also
value
that
local
variable
declaration
shadows
value
that
restored
when
function
returns
example
variable
declared
local
function
func
func
calls
another
function
func
erences
made
from
within
func
will
resolve
local
variable
from
func
shadowing
global
vari
able
named
unset
builtin
also
acts
using
same
dynamic
scope
variable
local
current
scope
unset
will
unset
otherwise
unset
will
refer
variable
found
calling
scope
described
above
vari
able
current
local
scope
unset
will
remain
until
reset
that
scope
until
function
returns
once
function
returns
instance
variable
previous
scope
will
become
visible
unset
acts
variable
previous
scope
instance
variable
with
that
name
that
been
shadowed
will
become
visible
funcnest
variable
numeric
value
greater
than
defines
maximum
function
nesting
level
function
invocations
that
exceed
limit
cause
entire
command
abort
builtin
command
return
executed
function
function
completes
execution
resumes
with
next
command
after
function
call
command
associated
with
return
trap
executed
before
execution
resumes
when
function
completes
values
positional
parameters
special
parameter
restored
values
they
prior
function
execution
function
names
definitions
listed
with
option
declare
typeset
builtin
commands
option
declare
typeset
will
list
function
names
only
optionally
source
file
line
number
extdebug
shell
option
enabled
functions
exported
that
subshells
automatically
have
them
defined
with
option
export
builtin
function
definition
deleted
using
option
unset
builtin
functions
recursive
funcnest
variable
used
limit
depth
function
call
stack
strict
number
function
invocations
default
limit
imposed
number
recursive
calls
arithmetic
evaluation
shell
allows
arithmetic
expressions
evaluated
under
certain
circumstances
declare
builtin
commands
compound
command
arithmetic
expansion
evaluation
done
fixed
width
integers
with
check
overflow
though
division
trapped
flagged
error
operators
their
prece
dence
associativity
values
same
language
following
list
operators
grouped
into
levels
equal
precedence
operators
levels
listed
order
decreasing
precedence
variable
post
increment
post
decrement
unary
minus
plus
variable
increment
decrement
logical
bitwise
negation
exponentiation
multiplication
division
remainder
addition
subtraction
left
right
bitwise
shifts
comparison
equality
inequality
bitwise
bitwise
exclusive
bitwise
logical
logical
expr
expr
expr
conditional
operator
assignment
expr
expr
comma
shell
variables
allowed
operands
parameter
expansion
performed
before
expression
evaluated
within
expression
shell
variables
also
referenced
name
without
using
parameter
expansion
syntax
shell
variable
that
null
unset
evaluates
when
referenced
name
without
using
parameter
expansion
syntax
value
variable
evaluated
arithmetic
expression
when
referenced
when
variable
which
been
given
integer
attribute
using
declare
assigned
value
null
value
evaluates
shell
variable
need
have
integer
attribute
turned
used
expression
integer
constants
follow
language
definition
without
suffixes
character
constants
constants
with
lead
interpreted
octal
numbers
leading
denotes
hexadecimal
otherwise
numbers
take
form
base
where
optional
base
decimal
number
between
representing
arithmetic
base
number
that
base
base
omitted
then
base
used
when
specifying
digit
required
digits
greater
than
represented
lowercase
letters
uppercase
letters
that
order
base
less
than
equal
lowercase
uppercase
letters
used
interchangeably
represent
numbers
between
operators
evaluated
order
precedence
expressions
parentheses
evaluated
first
override
precedence
rules
above
conditional
expressions
conditional
expressions
used
compound
command
test
builtin
commands
test
file
tributes
perform
string
arithmetic
comparisons
test
commands
determine
their
behavior
based
number
arguments
descriptions
those
commands
other
command
specific
actions
expressions
formed
from
following
unary
binary
primaries
bash
handles
several
filenames
specially
when
they
used
expressions
operating
system
which
bash
running
provides
these
special
files
bash
will
them
otherwise
will
emulate
them
internally
with
this
behavior
file
argument
maries
form
then
file
descriptor
checked
file
argument
primaries
stdin
stdout
stderr
file
descriptor
respectively
checked
unless
otherwise
specified
primaries
that
operate
files
follow
symbolic
links
operate
target
link
rather
than
link
itself
when
used
with
operators
sort
lexicographically
using
current
locale
test
command
sorts
using
ascii
ordering
file
true
file
exists
file
true
file
exists
block
special
file
file
true
file
exists
character
special
file
file
true
file
exists
directory
file
true
file
exists
file
true
file
exists
regular
file
file
true
file
exists
group
file
true
file
exists
symbolic
link
file
true
file
exists
sticky
file
true
file
exists
named
pipe
fifo
file
true
file
exists
readable
file
true
file
exists
size
greater
than
zero
true
file
descriptor
open
refers
terminal
file
true
file
exists
user
file
true
file
exists
writable
file
true
file
exists
executable
file
true
file
exists
owned
effective
group
file
true
file
exists
symbolic
link
file
true
file
exists
been
modified
since
last
read
file
true
file
exists
owned
effective
user
file
true
file
exists
socket
file
file
true
file
file
refer
same
device
inode
numbers
file
file
true
file
newer
according
modification
date
than
file
file
exists
file
does
file
file
true
file
older
than
file
file
exists
file
does
optname
true
shell
option
optname
enabled
list
options
under
description
option
builtin
below
varname
true
shell
variable
varname
been
assigned
value
varname
true
shell
variable
varname
name
reference
string
true
length
string
zero
string
string
true
length
string
zero
string
string
string
string
true
strings
equal
should
used
with
test
command
posix
conformance
when
used
with
command
this
performs
pattern
matching
described
above
compound
commands
string
string
true
strings
equal
string
string
true
string
sorts
before
string
lexicographically
string
string
true
string
sorts
after
string
lexicographically
these
arithmetic
binary
operators
return
true
equal
equal
less
than
less
than
equal
greater
than
greater
than
equal
respec
tively
positive
negative
integers
when
used
with
command
evaluated
arithmetic
expressions
arithmetic
evaluation
above
simple
command
expansion
when
simple
command
executed
shell
performs
following
expansions
assignments
redirections
from
left
right
following
order
words
that
parser
marked
variable
assignments
those
preceding
command
name
redirec
tions
saved
later
processing
words
that
variable
assignments
redirections
expanded
words
remain
after
expan
sion
first
word
taken
name
command
remaining
words
arguments
redirections
performed
described
above
under
redirection
text
after
each
variable
assignment
undergoes
tilde
expansion
parameter
expansion
command
stitution
arithmetic
expansion
quote
removal
before
being
assigned
variable
command
name
results
variable
assignments
affect
current
shell
environment
otherwise
variables
added
environment
executed
command
affect
current
shell
environment
assignments
attempts
assign
value
readonly
variable
error
occurs
command
exits
with
zero
status
command
name
results
redirections
performed
affect
current
shell
environment
redi
rection
error
causes
command
exit
with
zero
status
there
command
name
left
after
expansion
execution
proceeds
described
below
otherwise
command
expansions
contained
command
substitution
exit
status
command
exit
status
last
command
substitution
performed
there
were
command
substitutions
command
exits
with
status
zero
command
execution
after
command
been
split
into
words
results
simple
command
optional
list
arguments
following
actions
taken
command
name
contains
slashes
shell
attempts
locate
there
exists
shell
function
that
name
that
function
invoked
described
above
functions
name
does
match
function
shell
searches
list
shell
builtins
match
found
that
builtin
invoked
name
neither
shell
function
builtin
contains
slashes
bash
searches
each
element
path
directory
containing
executable
file
that
name
bash
uses
hash
table
remember
full
path
names
executable
files
hash
under
shell
builtin
commands
below
full
search
directories
path
performed
only
command
found
hash
table
search
unsuccessful
shell
searches
defined
shell
function
named
command
found
handle
that
function
exists
invoked
separate
execution
environment
with
original
command
original
command
arguments
arguments
func
tion
exit
status
becomes
exit
status
that
subshell
that
function
defined
shell
prints
error
message
returns
exit
status
search
successful
command
name
contains
more
slashes
shell
executes
named
gram
separate
execution
environment
argument
name
given
remaining
arguments
command
arguments
given
this
execution
fails
because
file
executable
format
file
directory
assumed
shell
script
file
containing
shell
commands
subshell
spawned
execute
this
subshell
reini
tializes
itself
that
effect
shell
been
invoked
handle
script
with
exception
that
locations
commands
remembered
parent
hash
below
under
shell
builtin
commands
retained
child
program
file
beginning
with
remainder
first
line
specifies
interpreter
gram
shell
executes
specified
interpreter
operating
systems
that
handle
this
executable
format
themselves
arguments
interpreter
consist
single
optional
argument
following
interpreter
name
first
line
program
followed
name
program
followed
command
arguments
command
execution
environment
shell
execution
environment
which
consists
following
open
files
inherited
shell
invocation
modified
redirections
supplied
exec
builtin
current
working
directory
pushd
popd
inherited
shell
invocation
file
creation
mode
mask
umask
inherited
from
shell
parent
current
traps
trap
shell
parameters
that
variable
assignment
with
inherited
from
shell
parent
environment
shell
functions
defined
during
execution
inherited
from
shell
parent
environment
options
enabled
invocation
either
default
with
command
line
arguments
options
enabled
shopt
shell
aliases
defined
with
alias
various
process
including
those
background
jobs
value
value
ppid
when
simple
command
other
than
builtin
shell
function
executed
invoked
separate
execu
tion
environment
that
consists
following
unless
otherwise
noted
values
inherited
from
shell
shell
open
files
plus
modifications
additions
specified
redirections
command
current
working
directory
file
creation
mode
mask
shell
variables
functions
marked
export
along
with
variables
exported
command
passed
environment
traps
caught
shell
reset
values
inherited
from
shell
parent
traps
ignored
shell
ignored
command
invoked
this
separate
environment
cannot
affect
shell
execution
environment
command
substitution
commands
grouped
with
parentheses
asynchronous
commands
invoked
subshell
envi
ronment
that
duplicate
shell
environment
except
that
traps
caught
shell
reset
values
that
shell
inherited
from
parent
invocation
builtin
commands
that
invoked
part
pipeline
also
executed
subshell
environment
changes
made
subshell
environment
cannot
affect
shell
execu
tion
environment
subshells
spawned
execute
command
substitutions
inherit
value
option
from
parent
shell
when
posix
mode
bash
clears
option
such
subshells
command
followed
control
active
default
standard
input
command
empty
file
null
otherwise
invoked
command
inherits
file
descriptors
calling
shell
modified
redirections
environment
when
program
invoked
given
array
strings
called
environment
this
list
name
value
pairs
form
name
value
shell
provides
several
ways
manipulate
environment
invocation
shell
scans
environment
creates
parameter
each
name
found
automatically
marking
export
child
processes
executed
mands
inherit
environment
export
declare
commands
allow
parameters
functions
added
deleted
from
environment
value
parameter
environment
modified
value
becomes
part
environment
replacing
environment
inherited
executed
command
consists
shell
initial
environment
whose
values
modified
shell
less
pairs
removed
unset
command
plus
additions
export
declare
commands
environment
simple
command
function
augmented
temporarily
prefixing
with
parameter
signments
described
above
parameters
these
assignment
statements
affect
only
environment
seen
that
command
option
builtin
command
below
then
parameter
assignments
placed
envi
ronment
command
just
those
that
precede
command
name
when
bash
invokes
external
command
variable
full
filename
command
passed
that
command
environment
exit
status
exit
status
executed
command
value
returned
waitpid
system
call
equivalent
function
exit
statuses
fall
between
though
explained
below
shell
values
above
specially
exit
statuses
from
shell
builtins
compound
commands
also
limited
this
range
under
certain
circum
stances
shell
will
special
values
indicate
specific
failure
modes
shell
purposes
command
which
exits
with
zero
exit
status
succeeded
exit
status
zero
indi
cates
success
zero
exit
status
indicates
failure
when
command
terminates
fatal
signal
bash
uses
value
exit
status
command
found
child
process
created
execute
returns
status
command
found
executable
return
status
command
fails
because
error
during
expansion
redirection
exit
status
greater
than
zero
shell
builtin
commands
return
status
true
successful
zero
false
error
occurs
while
they
execute
builtins
return
exit
status
indicate
incorrect
usage
generally
invalid
options
missing
arguments
bash
itself
returns
exit
status
last
command
executed
unless
syntax
error
occurs
which
case
with
zero
value
also
exit
builtin
command
below
signals
when
bash
interactive
absence
traps
ignores
sigterm
that
kill
does
kill
interac
tive
shell
sigint
caught
handled
that
wait
builtin
interruptible
cases
bash
nores
sigquit
control
effect
bash
ignores
sigttin
sigttou
sigtstp
builtin
commands
bash
have
signal
handlers
values
inherited
shell
from
parent
when
control
effect
asynchronous
commands
ignore
sigint
sigquit
addition
these
inherited
handlers
commands
result
command
substitution
ignore
keyboard
generated
control
signals
sigt
sigttou
sigtstp
shell
exits
default
upon
receipt
sighup
before
exiting
interactive
shell
resends
sighup
jobs
running
stopped
stopped
jobs
sent
sigcont
ensure
that
they
receive
sighup
prevent
shell
from
sending
signal
particular
should
removed
from
jobs
table
with
disown
builtin
shell
builtin
commands
below
marked
receive
sighup
using
disown
huponexit
shell
option
been
with
shopt
bash
sends
sighup
jobs
when
interactive
login
shell
exits
bash
waiting
command
complete
receives
signal
which
trap
been
trap
will
executed
until
command
completes
when
bash
waiting
asynchronous
command
wait
builtin
reception
signal
which
trap
been
will
cause
wait
builtin
return
immediately
with
exit
status
greater
than
immediately
after
which
trap
executed
control
control
refers
ability
selectively
stop
suspend
execution
processes
continue
resume
their
execution
later
point
user
typically
employs
this
facility
interactive
interface
supplied
jointly
operating
system
kernel
terminal
driver
bash
shell
associates
with
each
pipeline
keeps
table
currently
executing
jobs
which
listed
with
jobs
command
when
bash
starts
asynchronously
background
prints
line
that
looks
like
indicating
that
this
number
that
process
last
process
pipeline
associated
with
this
processes
single
pipeline
members
same
bash
uses
straction
basis
control
facilitate
implementation
user
interface
control
operating
system
maintains
notion
current
terminal
process
group
members
this
process
group
processes
whose
process
group
equal
current
terminal
process
group
receive
keyboard
generated
signals
such
sigint
these
processes
said
foreground
background
processes
those
whose
process
group
differs
from
terminal
such
processes
immune
keyboard
generated
signals
only
foreground
processes
allowed
read
from
user
specifies
with
stty
tostop
write
terminal
background
processes
which
attempt
read
from
write
when
stty
tostop
effect
terminal
sent
sigttin
sigttou
signal
kernel
terminal
driver
which
unless
caught
suspends
process
operating
system
which
bash
running
supports
control
bash
contains
facilities
typing
suspend
character
typically
control
while
process
running
causes
that
process
stopped
turns
control
bash
typing
delayed
suspend
character
typically
control
causes
process
stopped
when
attempts
read
input
from
terminal
control
returned
bash
user
then
nipulate
state
this
using
command
continue
background
command
continue
foreground
kill
command
kill
takes
effect
immediately
additional
side
fect
causing
pending
output
typeahead
discarded
there
number
ways
refer
shell
character
introduces
specification
spec
number
referred
also
referred
using
prefix
name
used
start
using
substring
that
appears
command
line
example
refers
stopped
whose
command
name
begins
with
prefix
matches
more
than
bash
reports
error
using
other
hand
refers
containing
string
command
line
substring
matches
more
than
bash
reports
error
symbols
refer
shell
notion
current
which
last
stopped
while
foreground
started
background
previous
referenced
using
there
only
single
both
used
refer
that
output
pertaining
jobs
output
jobs
command
current
always
flagged
with
previous
with
single
with
accompanying
specification
also
refers
current
simply
naming
used
bring
into
foreground
synonym
bringing
from
background
into
foreground
similarly
resumes
background
equivalent
shell
learns
immediately
whenever
changes
state
normally
bash
waits
until
about
print
prompt
before
reporting
changes
status
interrupt
other
output
option
builtin
command
enabled
bash
reports
such
changes
immediately
trap
sigchld
executed
each
child
that
exits
attempt
exit
bash
made
while
jobs
stopped
checkjobs
shell
option
been
enabled
using
shopt
builtin
running
shell
prints
warning
message
checkjobs
option
enabled
lists
jobs
their
statuses
jobs
command
then
used
inspect
their
status
second
attempt
exit
made
without
intervening
command
shell
does
print
another
warning
stopped
jobs
terminated
when
shell
waiting
process
using
wait
builtin
control
enabled
wait
will
return
when
changes
state
option
causes
wait
wait
until
process
terminates
before
returning
prompting
when
executing
interactively
bash
displays
primary
prompt
when
ready
read
command
ondary
prompt
when
needs
more
input
complete
command
bash
displays
after
reads
command
before
executing
bash
displays
described
above
before
tracing
each
command
when
option
abled
bash
allows
these
prompt
strings
customized
inserting
number
backslash
escaped
special
charac
ters
that
decoded
follows
ascii
bell
character
date
weekday
month
date
format
format
format
passed
strftime
result
inserted
into
prompt
string
empty
format
results
locale
specific
time
representation
braces
required
ascii
escape
character
hostname
first
hostname
number
jobs
currently
managed
shell
basename
shell
terminal
device
name
newline
carriage
return
name
shell
basename
portion
following
final
slash
current
time
hour
format
current
time
hour
format
current
time
hour
format
current
time
hour
format
username
current
user
version
bash
release
bash
version
patch
level
current
working
directory
with
home
abbreviated
with
tilde
uses
value
prompt
trim
variable
basename
current
working
directory
with
home
abbreviated
with
tilde
history
number
this
command
command
number
this
command
effective
otherwise
character
corresponding
octal
number
backslash
begin
sequence
printing
characters
which
could
used
embed
terminal
control
sequence
into
prompt
sequence
printing
characters
command
number
history
number
usually
different
history
number
command
position
history
list
which
include
commands
restored
from
history
file
history
below
while
command
number
position
sequence
commands
executed
during
current
shell
session
after
string
decoded
expanded
parameter
expansion
command
substitution
arithmetic
expansion
quote
removal
ject
value
promptvars
shell
option
description
shopt
command
under
shell
builtin
mands
below
this
have
unwanted
side
effects
escaped
portions
string
appear
within
command
substitu
tion
contain
characters
special
word
expansion
readline
this
library
that
handles
reading
input
when
using
interactive
shell
unless
noediting
option
given
shell
invocation
line
editing
also
used
when
using
option
read
builtin
default
line
editing
commands
similar
those
emacs
style
line
editing
interface
also
available
line
editing
enabled
time
using
emacs
options
builtin
shell
builtin
mands
below
turn
line
editing
after
shell
running
emacs
options
builtin
readline
notation
this
section
emacs
style
notation
used
denote
keystrokes
control
keys
denoted
means
control
similarly
meta
keys
denoted
means
meta
keyboards
without
meta
means
press
escape
then
this
makes
meta
prefix
combination
means
control
press
escape
then
hold
control
while
pressing
readline
commands
given
numeric
arguments
which
normally
repeat
count
sometimes
however
sign
argument
that
significant
passing
negative
argument
command
that
acts
forward
rection
kill
line
causes
that
command
backward
direction
commands
whose
behavior
with
argu
ments
deviates
from
this
noted
below
when
command
described
killing
text
text
deleted
saved
possible
future
retrieval
yanking
killed
text
saved
kill
ring
consecutive
kills
cause
text
accumulated
into
unit
which
yanked
once
commands
which
kill
text
separate
chunks
text
kill
ring
readline
initialization
readline
customized
putting
commands
initialization
file
inputrc
file
name
this
file
taken
from
value
inputrc
variable
that
variable
unset
default
inputrc
that
file
does
exist
cannot
read
ultimate
default
inputrc
when
program
which
uses
readline
brary
starts
initialization
file
read
bindings
variables
there
only
basic
constructs
allowed
readline
initialization
file
blank
lines
ignored
lines
beginning
with
comments
lines
beginning
with
indicate
conditional
constructs
other
lines
denote
bindings
vari
able
settings
default
bindings
changed
with
inputrc
file
other
programs
that
this
library
their
commands
bindings
example
placing
control
universal
argument
meta
universal
argument
into
inputrc
would
make
execute
readline
command
universal
argument
following
symbolic
character
names
recognized
rubout
newline
return
space
addition
command
names
readline
allows
keys
bound
string
that
inserted
when
pressed
macro
readline
bindings
syntax
controlling
bindings
inputrc
file
simple
that
required
name
mand
text
macro
sequence
which
should
bound
name
specified
ways
symbolic
name
possibly
with
meta
control
prefixes
sequence
when
using
form
keyname
function
name
macro
keyname
name
spelled
english
exam
control
universal
argument
meta
rubout
backward
kill
word
control
output
above
example
bound
function
universal
argument
bound
function
back
ward
kill
word
bound
macro
expressed
right
hand
side
that
insert
text
output
into
line
second
form
keyseq
function
name
macro
keyseq
differs
from
keyname
above
that
strings
denoting
entire
sequence
specified
placing
sequence
within
double
quotes
some
emacs
style
escapes
used
following
example
symbolic
character
names
recognized
universal
argument
read
init
file
function
this
example
again
bound
function
universal
argument
bound
function
read
init
file
bound
insert
text
function
full
emacs
style
escape
sequences
control
prefix
meta
prefix
escape
character
backslash
literal
literal
addition
emacs
style
escape
sequences
second
backslash
escapes
available
alert
bell
backspace
delete
form
feed
newline
carriage
return
horizontal
vertical
eight
character
whose
value
octal
value
three
digits
eight
character
whose
value
hexadecimal
value
digits
when
entering
text
macro
single
double
quotes
must
used
indicate
macro
definition
unquoted
text
assumed
function
name
macro
body
backslash
escapes
described
above
expanded
backslash
will
quote
other
character
macro
text
including
bash
allows
current
readline
bindings
displayed
modified
with
bind
builtin
command
edit
mode
switched
during
interactive
using
option
builtin
command
shell
builtin
commands
below
readline
variables
readline
variables
that
used
further
customize
behavior
variable
inputrc
file
with
statement
form
variable
name
value
using
bind
builtin
command
shell
builtin
commands
below
except
where
noted
readline
variables
take
values
without
regard
case
unrecognized
vari
able
names
ignored
when
variable
value
read
empty
null
values
case
insensitive
equivalent
other
values
equivalent
variables
their
default
values
bell
style
audible
controls
what
happens
when
readline
wants
ring
terminal
bell
none
readline
never
rings
bell
visible
readline
uses
visible
bell
available
audible
readline
attempts
ring
terminal
bell
bind
special
chars
readline
attempts
bind
control
characters
treated
specially
kernel
terminal
driver
their
readline
equivalents
blink
matching
paren
readline
attempts
briefly
move
cursor
opening
parenthesis
when
closing
parenthe
inserted
colored
completion
prefix
when
listing
completions
readline
displays
common
prefix
possible
comple
tions
using
different
color
color
definitions
taken
from
value
colors
environment
variable
colored
stats
readline
displays
possible
completions
using
different
colors
indicate
their
file
type
color
definitions
taken
from
value
colors
environment
variable
comment
begin
string
that
inserted
when
readline
insert
comment
command
executed
this
command
bound
emacs
mode
command
mode
completion
display
width
number
screen
columns
used
display
possible
matches
when
performing
completion
value
nored
less
than
greater
than
terminal
screen
width
value
will
cause
matches
displayed
line
default
value
completion
ignore
case
readline
performs
filename
matching
completion
case
insensitive
fashion
completion
case
completion
ignore
case
enabled
readline
treats
hyphens
underscores
equivalent
when
performing
case
insensitive
filename
matching
completion
completion
prefix
display
length
length
characters
common
prefix
list
possible
completions
that
displayed
without
modification
when
value
greater
than
zero
common
prefixes
longer
than
this
value
replaced
with
ellipsis
when
displaying
possible
completions
completion
query
items
this
determines
when
user
queried
about
viewing
number
possible
completions
generated
possible
completions
command
integer
value
greater
than
equal
zero
possible
completions
greater
than
equal
value
this
variable
readline
will
whether
user
wishes
view
them
otherwise
they
simply
listed
terminal
convert
meta
readline
will
convert
characters
with
eighth
ascii
sequence
stripping
eighth
prefixing
escape
character
effect
using
escape
meta
prefix
default
readline
will
locale
contains
eight
characters
disable
completion
readline
will
inhibit
word
completion
completion
characters
will
inserted
into
line
they
been
mapped
self
insert
echo
control
characters
when
operating
systems
that
indicate
they
support
readline
echoes
character
corresponding
signal
generated
from
keyboard
editing
mode
emacs
controls
whether
readline
begins
with
bindings
similar
emacs
editing
mode
either
emacs
emacs
mode
string
show
mode
prompt
variable
enabled
this
string
displayed
immediately
before
last
line
primary
prompt
when
emacs
editing
mode
active
value
expanded
like
binding
stan
dard
meta
control
prefixes
backslash
escape
sequences
available
capes
begin
sequences
printing
characters
which
used
embed
terminal
control
sequence
into
mode
string
enable
bracketed
paste
when
readline
will
configure
terminal
that
will
enable
insert
each
paste
into
editing
buffer
single
string
characters
instead
treating
each
character
been
read
from
keyboard
this
prevent
pasted
characters
from
being
interpreted
editing
commands
enable
keypad
when
readline
will
enable
application
keypad
when
called
some
systems
need
this
enable
arrow
keys
enable
meta
when
readline
will
enable
meta
modifier
terminal
claims
support
when
called
many
terminals
meta
used
send
eight
characters
expand
tilde
tilde
expansion
performed
when
readline
attempts
word
completion
history
preserve
point
history
code
attempts
place
point
same
location
each
history
line
retrieved
with
previous
history
next
history
history
size
unset
maximum
number
history
entries
saved
history
list
zero
existing
history
entries
deleted
entries
saved
value
less
than
zero
number
history
entries
limited
default
number
history
entries
value
histsize
shell
variable
attempt
made
history
size
numeric
value
maximum
number
history
entries
will
horizontal
scroll
mode
when
makes
readline
single
line
display
scrolling
input
horizontally
single
screen
line
when
becomes
longer
than
screen
width
rather
than
wrapping
line
this
setting
automatically
enabled
terminals
height
input
meta
readline
will
enable
eight
input
that
will
strip
eighth
from
char
acters
reads
regardless
what
terminal
claims
support
name
meta
flag
synonym
this
variable
default
readline
will
locale
contains
eight
charac
ters
isearch
terminators
string
characters
that
should
terminate
incremental
search
without
subsequently
executing
char
acter
command
this
variable
been
given
value
characters
will
terminate
incremental
search
keymap
emacs
current
readline
keymap
valid
keymap
names
emacs
emacs
standard
emacs
meta
emacs
ctlx
command
insert
equivalent
command
emacs
equivalent
emacs
standard
default
value
emacs
value
editing
mode
also
affects
default
keymap
keyseq
timeout
specifies
duration
readline
will
wait
character
when
reading
ambiguous
sequence
that
form
complete
sequence
using
input
read
take
additional
input
complete
longer
sequence
input
received
within
timeout
readline
will
shorter
complete
sequence
value
specified
milliseconds
value
means
that
readline
will
wait
second
additional
input
this
variable
value
less
than
equal
zero
meric
value
readline
will
wait
until
another
pressed
decide
which
sequence
complete
mark
directories
completed
directory
names
have
slash
appended
mark
modified
lines
history
lines
that
have
been
modified
displayed
with
preceding
asterisk
mark
symlinked
directories
completed
names
which
symbolic
links
directories
have
slash
appended
subject
value
mark
directories
match
hidden
files
this
variable
when
causes
readline
match
files
whose
names
begin
with
hidden
files
when
performing
filename
completion
leading
must
supplied
user
filename
completed
menu
complete
display
prefix
menu
completion
displays
common
prefix
list
possible
completions
which
empty
before
cycling
through
list
output
meta
readline
will
display
characters
with
eighth
directly
rather
than
meta
fixed
escape
sequence
default
readline
will
locale
contains
eight
characters
page
completions
readline
uses
internal
more
like
pager
display
screenful
possible
completions
time
print
completions
horizontally
readline
will
display
completions
with
matches
sorted
horizontally
alphabetical
order
rather
than
down
screen
revert
newline
readline
will
undo
changes
history
lines
before
returning
when
accept
line
executed
default
history
lines
modified
retain
individual
undo
lists
across
calls
readline
show
ambiguous
this
alters
default
behavior
completion
functions
words
which
have
more
than
possible
completion
cause
matches
listed
immediately
instead
ringing
bell
show
unmodified
this
alters
default
behavior
completion
functions
fashion
similar
show
ambiguous
words
which
have
more
than
possible
completion
without
possible
partial
completion
possible
completions
share
common
prefix
cause
matches
listed
immediately
instead
ring
bell
show
mode
prompt
string
beginning
prompt
indicating
editing
mode
emacs
command
insertion
mode
strings
user
settable
emacs
mode
string
skip
completed
text
this
alters
default
completion
behavior
when
inserting
single
match
into
line
only
active
when
performing
completion
middle
word
enabled
readline
does
insert
charac
ters
from
completion
that
match
characters
after
point
word
being
completed
portions
word
following
cursor
duplicated
mode
string
show
mode
prompt
variable
enabled
this
string
displayed
immediately
before
last
line
primary
prompt
when
editing
mode
active
command
mode
value
expanded
like
binding
standard
meta
control
prefixes
backslash
escape
sequences
available
escapes
begin
sequences
printing
characters
which
used
embed
terminal
control
sequence
into
mode
string
mode
string
show
mode
prompt
variable
enabled
this
string
displayed
immediately
before
last
line
primary
prompt
when
editing
mode
active
insertion
mode
value
expanded
like
binding
standard
meta
control
prefixes
backslash
escape
sequences
available
escapes
begin
sequences
printing
characters
which
used
embed
terminal
control
sequence
into
mode
string
visible
stats
character
denoting
file
type
reported
stat
appended
filename
when
listing
possible
completions
readline
conditional
constructs
readline
implements
facility
similar
spirit
conditional
compilation
features
preprocessor
which
allows
bindings
variable
settings
performed
result
tests
there
four
parser
directives
used
construct
allows
bindings
made
based
editing
mode
terminal
being
used
plication
using
readline
text
test
after
comparison
operator
extends
line
unless
otherwise
noted
characters
required
isolate
mode
mode
form
directive
used
test
whether
readline
emacs
mode
this
used
conjunction
with
keymap
command
instance
bindings
emacs
stan
dard
emacs
ctlx
keymaps
only
readline
starting
emacs
mode
term
term
form
used
include
terminal
specific
bindings
perhaps
bind
quences
output
terminal
function
keys
word
right
side
tested
against
both
full
name
terminal
portion
terminal
name
before
first
this
lows
match
both
instance
version
version
test
used
perform
comparisons
against
specific
readline
versions
version
expands
current
readline
version
comparison
operators
includes
version
number
supplied
right
side
operator
consists
major
version
number
optional
decimal
point
optional
minor
version
minor
version
omitted
assumed
operator
separated
from
string
version
from
version
number
argument
whitespace
application
application
construct
used
include
application
specific
settings
each
program
using
readline
library
sets
application
name
initialization
file
test
particular
value
this
could
used
bind
sequences
functions
useful
specific
program
stance
following
command
adds
sequence
that
quotes
current
previous
word
bash
bash
quote
current
previous
word
endif
variable
variable
construct
provides
simple
equality
tests
readline
variables
values
permit
comparison
operators
variable
name
must
separated
from
comparison
operator
whitespace
operator
separated
from
value
right
hand
side
white
space
both
string
boolean
variables
tested
boolean
variables
must
tested
against
values
endif
this
command
seen
previous
example
terminates
command
else
commands
this
branch
directive
executed
test
fails
include
this
directive
takes
single
filename
argument
reads
commands
bindings
from
that
file
example
following
directive
would
read
inputrc
include
inputrc
searching
readline
provides
commands
searching
through
command
history
history
below
lines
containing
specified
string
there
search
modes
incremental
incremental
incremental
searches
begin
before
user
finished
typing
search
string
each
character
search
string
typed
readline
displays
next
entry
from
history
matching
string
typed
incremental
search
requires
only
many
characters
needed
find
desired
history
entry
characters
present
value
isearch
terminators
variable
used
terminate
incremental
search
that
variable
been
assigned
value
escape
control
characters
will
terminate
incremental
search
control
will
abort
incremental
search
restore
original
line
when
search
terminated
history
entry
taining
search
string
becomes
current
line
find
other
matching
entries
history
list
type
control
control
appropriate
this
will
search
backward
forward
history
next
entry
matching
search
string
typed
other
quence
bound
readline
command
will
terminate
search
execute
that
command
instance
newline
will
terminate
search
accept
line
thereby
executing
command
from
history
list
readline
remembers
last
incremental
search
string
control
typed
without
intervening
charac
ters
defining
search
string
remembered
search
string
used
incremental
searches
read
entire
search
string
before
starting
search
matching
history
lines
search
string
typed
user
part
contents
current
line
readline
command
names
following
list
names
commands
default
sequences
which
they
bound
command
names
without
accompanying
sequence
unbound
default
following
descriptions
point
refers
current
cursor
position
mark
refers
cursor
position
saved
mark
command
text
between
point
mark
referred
region
commands
moving
beginning
line
move
start
current
line
line
move
line
forward
char
move
forward
character
backward
char
move
back
character
forward
word
move
forward
next
word
words
composed
alphanumeric
characters
letters
backward
word
move
back
start
current
previous
word
words
composed
alphanumeric
characters
ters
digits
shell
forward
word
move
forward
next
word
words
delimited
quoted
shell
metacharacters
shell
backward
word
move
back
start
current
previous
word
words
delimited
quoted
shell
metacharac
ters
previous
screen
line
attempt
move
point
same
physical
screen
column
previous
physical
screen
line
this
will
have
desired
effect
current
readline
line
does
take
more
than
physical
line
point
greater
than
length
prompt
plus
screen
width
next
screen
line
attempt
move
point
same
physical
screen
column
next
physical
screen
line
this
will
have
desired
effect
current
readline
line
does
take
more
than
physical
line
length
current
readline
line
greater
than
length
prompt
plus
screen
width
clear
display
clear
screen
possible
terminal
scrollback
buffer
then
redraw
current
line
leaving
current
line
screen
clear
screen
clear
screen
then
redraw
current
line
leaving
current
line
screen
with
argument
refresh
current
line
without
clearing
screen
redraw
current
line
refresh
current
line
commands
manipulating
history
accept
line
newline
return
accept
line
regardless
where
cursor
this
line
empty
history
list
cording
state
histcontrol
variable
line
modified
history
line
then
restore
history
line
original
state
previous
history
fetch
previous
command
from
history
list
moving
back
list
next
history
fetch
next
command
from
history
list
moving
forward
list
beginning
history
move
first
line
history
history
move
input
history
line
currently
being
entered
reverse
search
history
search
backward
starting
current
line
moving
through
history
necessary
this
incremental
search
forward
search
history
search
forward
starting
current
line
moving
down
through
history
necessary
this
incremental
search
incremental
reverse
search
history
search
backward
through
history
starting
current
line
using
incremental
search
string
supplied
user
incremental
forward
search
history
search
forward
through
history
using
incremental
search
string
supplied
user
history
search
forward
search
forward
through
history
string
characters
between
start
current
line
point
this
incremental
search
history
search
backward
search
backward
through
history
string
characters
between
start
current
line
point
this
incremental
search
history
substring
search
backward
search
backward
through
history
string
characters
between
start
current
line
current
cursor
position
point
search
string
match
anywhere
history
line
this
incremental
search
history
substring
search
forward
search
forward
through
history
string
characters
between
start
current
line
point
search
string
match
anywhere
history
line
this
incremental
search
yank
insert
first
argument
previous
command
usually
second
word
previous
line
point
with
argument
insert
word
from
previous
command
words
previous
command
begin
with
word
negative
argument
inserts
word
from
previous
command
once
argu
ment
computed
argument
extracted
history
expansion
been
specified
yank
last
insert
last
argument
previous
command
last
word
previous
history
entry
with
meric
argument
behave
exactly
like
yank
successive
calls
yank
last
move
back
through
history
list
inserting
last
word
word
specified
argument
first
call
each
line
turn
numeric
argument
supplied
these
successive
calls
determines
direction
move
through
history
negative
argument
switches
direction
through
history
back
forward
history
expansion
facilities
used
extract
last
word
history
expansion
been
specified
shell
expand
line
expand
line
shell
does
this
performs
alias
history
expansion
well
shell
word
expansions
history
expansion
below
description
history
expansion
history
expand
line
perform
history
expansion
current
line
history
expansion
below
description
history
pansion
magic
space
perform
history
expansion
current
line
insert
space
history
expansion
below
descrip
tion
history
expansion
alias
expand
line
perform
alias
expansion
current
line
aliases
above
description
alias
expansion
history
alias
expand
line
perform
history
alias
expansion
current
line
insert
last
argument
synonym
yank
last
operate
next
accept
current
line
execution
fetch
next
line
relative
current
line
from
history
editing
numeric
argument
supplied
specifies
history
entry
instead
current
line
edit
execute
command
invoke
editor
current
command
line
execute
result
shell
commands
bash
attempts
voke
visual
editor
emacs
editor
that
order
commands
changing
text
file
usually
character
indicating
file
example
stty
this
character
read
when
there
characters
line
point
beginning
line
readline
interprets
input
returns
delete
char
delete
character
point
this
function
bound
same
character
character
commonly
above
effects
backward
delete
char
rubout
delete
character
behind
cursor
when
given
numeric
argument
save
deleted
text
kill
ring
forward
backward
delete
char
delete
character
under
cursor
unless
cursor
line
which
case
charac
behind
cursor
deleted
quoted
insert
next
character
typed
line
verbatim
this
insert
characters
like
example
insert
insert
character
self
insert
insert
character
typed
transpose
chars
drag
character
before
point
forward
over
character
point
moving
point
forward
well
point
line
then
this
transposes
characters
before
point
negative
arguments
have
effect
transpose
words
drag
word
before
point
past
word
after
point
moving
point
over
that
word
well
point
line
this
transposes
last
words
line
upcase
word
uppercase
current
following
word
with
negative
argument
uppercase
previous
word
move
point
downcase
word
lowercase
current
following
word
with
negative
argument
lowercase
previous
word
move
point
capitalize
word
capitalize
current
following
word
with
negative
argument
capitalize
previous
word
move
point
overwrite
mode
toggle
overwrite
mode
with
explicit
positive
numeric
argument
switches
overwrite
mode
with
plicit
positive
numeric
argument
switches
insert
mode
this
command
affects
only
emacs
mode
mode
does
overwrite
differently
each
call
readline
starts
insert
mode
overwrite
mode
characters
bound
self
insert
replace
text
point
rather
than
pushing
text
right
characters
bound
backward
delete
char
replace
character
before
point
with
space
default
this
command
bound
killing
yanking
kill
line
kill
text
from
point
line
backward
kill
line
rubout
kill
backward
beginning
line
unix
line
discard
kill
backward
from
point
beginning
line
killed
text
saved
kill
ring
kill
whole
line
kill
characters
current
line
matter
where
point
kill
word
kill
from
point
current
word
between
words
next
word
word
boundaries
same
those
used
forward
word
backward
kill
word
rubout
kill
word
behind
point
word
boundaries
same
those
used
backward
word
shell
kill
word
kill
from
point
current
word
between
words
next
word
word
boundaries
same
those
used
shell
forward
word
shell
backward
kill
word
kill
word
behind
point
word
boundaries
same
those
used
shell
backward
word
unix
word
rubout
kill
word
behind
point
using
white
space
word
boundary
killed
text
saved
kill
ring
unix
filename
rubout
kill
word
behind
point
using
white
space
slash
character
word
boundaries
killed
text
saved
kill
ring
delete
horizontal
space
delete
spaces
tabs
around
point
kill
region
kill
text
current
region
copy
region
kill
copy
text
region
kill
buffer
copy
backward
word
copy
word
before
point
kill
buffer
word
boundaries
same
backward
word
copy
forward
word
copy
word
following
point
kill
buffer
word
boundaries
same
forward
word
yank
yank
kill
ring
into
buffer
point
yank
rotate
kill
ring
yank
only
works
following
yank
yank
numeric
arguments
digit
argument
this
digit
argument
already
accumulating
start
argument
starts
negative
argu
ment
universal
argument
this
another
specify
argument
this
command
followed
more
digits
optionally
with
leading
minus
sign
those
digits
define
argument
command
followed
digits
executing
universal
argument
again
ends
numeric
argument
otherwise
ignored
special
case
this
command
immediately
followed
character
that
neither
digit
minus
sign
argument
count
next
command
multiplied
four
argument
count
initially
executing
this
function
first
time
makes
argument
count
four
second
time
makes
argument
count
sixteen
completing
complete
attempt
perform
completion
text
before
point
bash
attempts
completion
treating
text
variable
text
begins
with
username
text
begins
with
hostname
text
begins
with
command
including
aliases
functions
turn
none
these
produces
match
filename
pletion
attempted
possible
completions
list
possible
completions
text
before
point
insert
completions
insert
completions
text
before
point
that
would
have
been
generated
possible
completions
menu
complete
similar
complete
replaces
word
completed
with
single
match
from
list
possible
pletions
repeated
execution
menu
complete
steps
through
list
possible
completions
inserting
each
match
turn
list
completions
bell
rung
subject
setting
bell
style
original
text
restored
argument
moves
positions
forward
list
matches
negative
argument
used
move
backward
through
list
this
command
intended
bound
unbound
default
menu
complete
backward
identical
menu
complete
moves
backward
through
list
possible
completions
menu
complete
been
given
negative
argument
this
command
unbound
default
delete
char
list
deletes
character
under
cursor
beginning
line
like
delete
char
line
behaves
identically
possible
completions
this
command
unbound
default
complete
filename
attempt
filename
completion
text
before
point
possible
filename
completions
list
possible
completions
text
before
point
treating
filename
complete
username
attempt
completion
text
before
point
treating
username
possible
username
completions
list
possible
completions
text
before
point
treating
username
complete
variable
attempt
completion
text
before
point
treating
shell
variable
possible
variable
completions
list
possible
completions
text
before
point
treating
shell
variable
complete
hostname
attempt
completion
text
before
point
treating
hostname
possible
hostname
completions
list
possible
completions
text
before
point
treating
hostname
complete
command
attempt
completion
text
before
point
treating
command
name
command
completion
attempts
match
text
against
aliases
reserved
words
shell
functions
shell
builtins
finally
executable
file
names
that
order
possible
command
completions
list
possible
completions
text
before
point
treating
command
name
dynamic
complete
history
attempt
completion
text
before
point
comparing
text
against
lines
from
history
list
sible
completion
matches
dabbrev
expand
attempt
menu
completion
text
before
point
comparing
text
against
lines
from
history
list
possible
completion
matches
complete
into
braces
perform
filename
completion
insert
list
possible
completions
enclosed
within
braces
list
available
shell
brace
expansion
above
keyboard
macros
start
macro
begin
saving
characters
typed
into
current
keyboard
macro
macro
stop
saving
characters
typed
into
current
keyboard
macro
store
definition
call
last
macro
execute
last
keyboard
macro
defined
making
characters
macro
appear
typed
keyboard
print
last
macro
print
last
keyboard
macro
defined
format
suitable
inputrc
file
miscellaneous
read
init
file
read
contents
inputrc
file
incorporate
bindings
variable
assignments
found
there
abort
abort
current
editing
command
ring
terminal
bell
subject
setting
bell
style
lowercase
version
metafied
character
uppercase
command
that
bound
corresponding
metafied
lower
case
character
behavior
undefined
already
lowercase
prefix
meta
metafy
next
character
typed
equivalent
meta
undo
incremental
undo
separately
remembered
each
line
revert
line
undo
changes
made
this
line
this
like
executing
undo
command
enough
times
return
line
initial
state
tilde
expand
perform
tilde
expansion
current
word
mark
space
mark
point
numeric
argument
supplied
mark
that
position
exchange
point
mark
swap
point
with
mark
current
cursor
position
saved
position
cursor
position
saved
mark
character
search
character
read
point
moved
next
occurrence
that
character
negative
count
searches
previous
occurrences
character
search
backward
character
read
point
moved
previous
occurrence
that
character
negative
count
searches
subsequent
occurrences
skip
sequence
read
enough
characters
consume
multi
sequence
such
those
defined
keys
like
home
such
sequences
begin
with
control
sequence
indicator
usually
this
sequence
bound
keys
producing
such
sequences
will
have
effect
unless
explicitly
bound
readline
command
stead
inserting
stray
characters
into
editing
buffer
this
unbound
default
usually
bound
insert
comment
without
numeric
argument
value
readline
comment
begin
variable
inserted
beginning
current
line
numeric
argument
supplied
this
command
acts
toggle
characters
beginning
line
match
value
comment
begin
value
inserted
otherwise
charac
ters
comment
begin
deleted
from
beginning
line
either
case
line
accepted
newline
been
typed
default
value
comment
begin
causes
this
command
make
current
line
shell
comment
numeric
argument
causes
comment
character
removed
line
will
executed
shell
glob
complete
word
word
before
point
treated
pattern
pathname
expansion
with
asterisk
implicitly
appended
this
pattern
used
generate
list
matching
filenames
possible
completions
glob
expand
word
word
before
point
treated
pattern
pathname
expansion
list
matching
filenames
inserted
replacing
word
numeric
argument
supplied
asterisk
appended
before
pathname
pansion
glob
list
expansions
list
expansions
that
would
have
been
generated
glob
expand
word
displayed
line
drawn
numeric
argument
supplied
asterisk
appended
before
pathname
expansion
dump
functions
print
functions
their
bindings
readline
output
stream
numeric
argument
supplied
output
formatted
such
that
made
part
inputrc
file
dump
variables
print
settable
readline
variables
their
values
readline
output
stream
numeric
argument
supplied
output
formatted
such
that
made
part
inputrc
file
dump
macros
print
readline
sequences
bound
macros
strings
they
output
numeric
argument
supplied
output
formatted
such
that
made
part
inputrc
file
display
shell
version
display
version
information
about
current
instance
bash
programmable
completion
when
word
completion
attempted
argument
command
which
completion
specification
compspec
been
defined
using
complete
builtin
shell
builtin
commands
below
programmable
completion
facilities
invoked
first
command
name
identified
command
word
empty
string
completion
attempted
begin
ning
empty
line
compspec
defined
with
option
complete
used
compspec
been
defined
that
command
compspec
used
generate
list
possible
completions
word
command
word
full
pathname
compspec
full
pathname
searched
first
compspec
found
full
pathname
attempt
made
find
compspec
portion
following
final
slash
those
searches
result
compspec
compspec
defined
with
option
complete
used
default
there
default
compspec
bash
attempts
alias
expansion
command
word
final
resort
attempts
find
compspec
command
word
from
successful
expansion
once
compspec
been
found
used
generate
list
matching
words
compspec
found
default
bash
completion
described
above
under
completing
performed
first
actions
specified
compspec
used
only
matches
which
prefixed
word
being
completed
returned
when
option
used
filename
directory
name
completion
shell
variable
nore
used
filter
matches
completions
specified
pathname
expansion
pattern
option
generated
next
words
generated
pattern
need
match
word
being
completed
globignore
shell
variable
used
filter
matches
fignore
variable
used
next
string
specified
argument
option
considered
string
first
split
using
characters
special
variable
delimiters
shell
quoting
honored
each
word
then
expanded
using
brace
expansion
tilde
expansion
parameter
variable
expansion
command
substitution
arithmetic
expansion
described
above
under
expansion
results
split
using
rules
described
above
under
word
splitting
results
expansion
prefix
matched
against
word
being
completed
matching
words
become
possible
completions
after
these
matches
have
been
generated
shell
function
command
specified
with
options
voked
when
command
function
invoked
comp
line
comp
point
comp
comp
type
variables
assigned
values
described
above
under
shell
variables
shell
function
being
invoked
comp
words
comp
cword
variables
also
when
function
command
invoked
first
argument
name
command
whose
arguments
being
completed
second
argument
word
being
completed
third
argument
word
preceding
word
being
completed
current
command
line
filtering
erated
completions
against
word
being
completed
performed
function
command
complete
freedom
generating
matches
function
specified
with
invoked
first
function
shell
facilities
including
compgen
builtin
described
below
generate
matches
must
possible
completions
compreply
variable
array
element
next
command
specified
with
option
invoked
environment
equivalent
command
substitution
should
print
list
completions
line
standard
output
backslash
used
escape
line
necessary
after
possible
completions
generated
filter
specified
with
option
applied
list
filter
pattern
used
pathname
expansion
pattern
replaced
with
text
word
completed
literal
escaped
with
backslash
backslash
removed
before
attempting
match
completion
that
matches
pattern
will
removed
from
list
leading
negates
pattern
this
case
completion
matching
pattern
will
removed
nocasematch
shell
option
enabled
match
performed
without
regard
case
alphabetic
characters
finally
prefix
suffix
specified
with
options
added
each
member
completion
list
result
returned
readline
completion
code
list
possible
completions
previously
applied
actions
generate
matches
dirnames
option
supplied
complete
when
compspec
defined
directory
name
completion
attempted
plusdirs
option
supplied
complete
when
compspec
defined
directory
name
completion
tempted
matches
added
results
other
actions
default
compspec
found
whatever
generates
returned
completion
code
full
sible
completions
default
bash
completions
attempted
readline
default
filename
completion
disabled
bashdefault
option
supplied
complete
when
compspec
defined
bash
default
completions
attempted
compspec
generates
matches
default
option
supplied
complete
when
compspec
defined
readline
default
completion
will
performed
compspec
attempted
default
bash
completions
generate
matches
when
compspec
indicates
that
directory
name
completion
desired
programmable
completion
functions
force
readline
append
slash
completed
names
which
symbolic
links
directories
subject
value
mark
directories
readline
variable
regardless
setting
mark
symlinked
directories
readline
variable
there
some
support
dynamically
modifying
completions
this
most
useful
when
used
combination
with
default
completion
specified
with
complete
possible
shell
functions
executed
completion
handlers
indicate
that
completion
should
retried
returning
exit
status
shell
function
returns
changes
compspec
associated
with
command
which
completion
being
attempted
supplied
first
argu
ment
when
function
executed
programmable
completion
restarts
from
beginning
with
attempt
find
compspec
that
command
this
allows
completions
built
dynamically
completion
attempted
rather
than
being
loaded
once
instance
assuming
that
there
library
compspecs
each
kept
file
corresponding
name
command
following
default
completion
function
would
load
completions
dynamically
completion
loader
bash
completion
null
return
complete
completion
loader
bashdefault
default
history
when
history
option
builtin
enabled
shell
provides
access
command
history
list
commands
previously
typed
value
histsize
variable
used
number
commands
save
history
list
text
last
histsize
commands
default
saved
shell
stores
each
command
history
list
prior
parameter
variable
expansion
expansion
above
after
history
expansion
formed
subject
values
shell
variables
histignore
histcontrol
startup
history
initialized
from
file
named
variable
histfile
default
bash
history
file
named
value
histfile
truncated
necessary
contain
more
than
number
lines
speci
fied
value
histfilesize
histfilesize
unset
null
numeric
value
numeric
value
less
than
zero
history
file
truncated
when
history
file
read
lines
beginning
with
history
comment
character
followed
immediately
digit
interpreted
timestamps
following
history
line
these
timestamps
optionally
displayed
depending
value
histtimeformat
variable
when
shell
with
history
enabled
exits
last
histsize
lines
copied
from
history
list
histfile
histappend
shell
option
enabled
description
shopt
under
shell
builtin
commands
below
lines
appended
history
file
otherwise
history
file
overwritten
histfile
unset
history
file
unwritable
history
saved
histtimeformat
variable
time
stamps
written
history
file
marked
with
history
comment
character
they
preserved
across
shell
sessions
this
uses
history
comment
character
distinguish
timestamps
from
other
history
lines
after
saving
history
history
file
truncated
contain
more
than
histfilesize
lines
histfilesize
unset
null
numeric
value
numeric
value
less
than
zero
history
file
truncated
builtin
command
shell
builtin
commands
below
used
list
edit
execute
portion
history
list
history
builtin
used
display
modify
history
list
manipulate
history
file
when
using
command
line
editing
search
commands
available
each
editing
mode
that
provide
access
history
list
shell
allows
control
over
which
commands
saved
history
list
histcontrol
histignore
vari
ables
cause
shell
save
only
subset
commands
entered
cmdhist
shell
option
abled
causes
shell
attempt
save
each
line
multi
line
command
same
history
entry
adding
semi
colons
where
necessary
preserve
syntactic
correctness
lithist
shell
option
causes
shell
save
command
with
embedded
newlines
instead
semicolons
description
shopt
builtin
below
under
shell
builtin
commands
information
setting
unsetting
shell
options
history
expansion
shell
supports
history
expansion
feature
that
similar
history
expansion
this
section
scribes
what
syntax
features
available
this
feature
enabled
default
interactive
shells
disabled
using
option
builtin
command
shell
builtin
commands
below
interactive
shells
perform
history
expansion
default
history
expansions
introduce
words
from
history
list
into
input
stream
making
easy
repeat
commands
insert
arguments
previous
command
into
current
input
line
errors
previous
commands
quickly
history
expansion
performed
immediately
after
complete
line
read
before
shell
breaks
into
words
performed
each
line
individually
without
taking
quoting
previous
lines
into
account
takes
place
parts
first
determine
which
line
from
history
list
during
substitution
second
lect
portions
that
line
inclusion
into
current
line
selected
from
history
event
portions
that
line
that
acted
upon
words
various
modifiers
available
manipulate
selected
words
line
broken
into
words
same
fashion
when
reading
input
that
several
metacharacter
sepa
rated
words
surrounded
quotes
considered
word
history
expansions
introduced
appearance
history
expansion
character
which
default
only
backslash
single
quotes
quote
history
expansion
character
history
expansion
character
also
treated
quoted
immediately
precedes
closing
double
quote
double
quoted
string
several
characters
inhibit
history
expansion
found
immediately
following
history
expansion
character
even
unquoted
space
newline
carriage
return
extglob
shell
option
enabled
will
also
inhibit
expansion
several
shell
options
settable
with
shopt
builtin
used
tailor
behavior
history
expansion
histverify
shell
option
enabled
description
shopt
builtin
below
readline
being
used
history
substitutions
immediately
passed
shell
parser
instead
expanded
line
reloaded
into
readline
editing
buffer
further
modification
readline
being
used
histreedit
shell
option
enabled
failed
history
substitution
will
reloaded
into
readline
editing
buffer
correction
tion
history
builtin
command
used
what
history
expansion
will
before
using
tion
history
builtin
used
commands
history
list
without
actually
executing
them
that
they
available
subsequent
recall
shell
allows
control
various
characters
used
history
expansion
mechanism
description
histchars
above
under
shell
variables
shell
uses
history
comment
character
mark
history
timestamps
when
writing
history
file
event
designators
event
designator
reference
command
line
entry
history
list
unless
reference
absolute
events
relative
current
position
history
list
start
history
substitution
except
when
followed
blank
newline
carriage
return
when
extglob
shell
option
enabled
using
shopt
builtin
refer
command
line
refer
current
command
minus
refer
previous
command
this
synonym
string
refer
most
recent
command
preceding
current
position
history
list
starting
with
string
string
refer
most
recent
command
preceding
current
position
history
list
containing
string
trailing
omitted
string
followed
immediately
newline
string
missing
string
from
most
recent
search
used
error
there
previous
search
string
string
string
quick
substitution
repeat
previous
command
replacing
string
with
string
equivalent
string
string
modifiers
below
entire
command
line
typed
word
designators
word
designators
used
select
desired
words
from
event
separates
event
specification
from
word
designator
omitted
word
designator
begins
with
words
numbered
from
beginning
line
with
first
word
being
denoted
zero
words
inserted
into
current
line
separated
single
spaces
zero
zeroth
word
shell
this
command
word
word
first
argument
that
word
last
word
this
usually
last
argument
will
expand
zeroth
word
there
only
word
line
first
word
matched
most
recent
string
search
search
string
begins
with
character
that
part
word
range
words
abbreviates
words
zeroth
this
synonym
error
there
just
word
event
empty
string
returned
that
case
abbreviates
abbreviates
like
omits
last
word
missing
defaults
word
designator
supplied
without
event
specification
previous
command
used
event
modifiers
after
optional
word
designator
there
appear
sequence
more
following
modifiers
each
ceded
these
modify
edit
word
words
selected
from
history
event
remove
trailing
filename
component
leaving
only
head
remove
leading
filename
components
leaving
tail
remove
trailing
suffix
form
leaving
basename
remove
trailing
suffix
print
command
execute
quote
substituted
words
escaping
further
substitutions
quote
substituted
words
with
break
into
words
blanks
newlines
modifiers
mutually
exclusive
last
supplied
used
substitute
first
occurrence
event
line
character
used
delimiter
place
final
delimiter
optional
last
character
event
line
delimiter
quoted
with
single
backslash
appears
replaced
single
backslash
will
quote
null
last
substituted
previous
tory
substitutions
took
place
last
string
string
search
null
each
matching
deleted
repeat
previous
substitution
cause
changes
applied
over
entire
event
line
this
used
conjunction
with
used
with
delimiter
used
place
final
delimiter
optional
last
character
event
line
used
synonym
apply
following
modifier
once
each
word
event
line
shell
builtin
commands
unless
otherwise
noted
each
builtin
command
documented
this
section
accepting
options
preceded
accepts
signify
options
true
false
test
builtins
accept
options
treat
specially
exit
logout
return
break
continue
shift
builtins
accept
process
arguments
beginning
with
without
requiring
other
builtins
that
accept
arguments
specified
accepting
tions
interpret
arguments
beginning
with
invalid
options
require
prevent
this
interpretation
arguments
effect
command
does
nothing
beyond
expanding
arguments
performing
specified
redirections
return
status
zero
filename
arguments
source
filename
arguments
read
execute
commands
from
filename
current
shell
environment
return
exit
status
last
command
executed
from
filename
filename
does
contain
slash
filenames
path
used
find
directory
containing
filename
file
searched
path
need
executable
when
bash
posix
mode
current
directory
searched
file
found
path
sourcepath
option
shopt
builtin
command
turned
path
searched
arguments
supplied
they
become
positional
parameters
when
filename
executed
otherwise
positional
parameters
changed
option
enabled
source
inherits
trap
debug
debug
trap
string
saved
restored
around
call
source
source
unsets
debug
trap
while
executes
sourced
file
changes
debug
trap
value
retained
when
source
completes
return
status
status
last
command
exited
within
script
commands
executed
false
filename
found
cannot
read
alias
name
value
alias
with
arguments
with
option
prints
list
aliases
form
alias
name
value
standard
output
when
arguments
supplied
alias
defined
each
name
whose
value
given
trailing
space
value
causes
next
word
checked
alias
substitution
when
alias
expanded
each
name
argument
list
which
value
supplied
name
value
alias
printed
alias
returns
true
unless
name
given
which
alias
been
defined
jobspec
resume
each
suspended
jobspec
background
been
started
with
jobspec
present
shell
notion
current
used
jobspec
returns
unless
when
control
disabled
when
with
control
enabled
specified
jobspec
found
started
without
control
bind
keymap
lpsvpsvx
bind
keymap
function
function
keyseq
bind
keymap
filename
bind
keymap
keyseq
shell
command
bind
keymap
keyseq
function
name
bind
keymap
keyseq
readline
command
display
current
readline
function
bindings
bind
sequence
readline
function
macro
readline
variable
each
option
argument
command
would
appear
inputrc
each
binding
command
must
passed
separate
argument
read
init
file
options
supplied
have
following
meanings
keymap
keymap
keymap
affected
subsequent
bindings
acceptable
keymap
names
emacs
emacs
standard
emacs
meta
emacs
ctlx
move
command
insert
equiva
lent
command
move
also
synonym
emacs
equivalent
emacs
standard
list
names
readline
functions
display
readline
function
names
bindings
such
that
they
read
list
current
readline
function
names
bindings
display
readline
sequences
bound
macros
strings
they
output
such
that
they
read
display
readline
sequences
bound
macros
strings
they
output
display
readline
variable
names
values
such
that
they
read
list
current
readline
variable
names
values
filename
read
bindings
from
filename
function
query
about
which
keys
invoke
named
function
function
unbind
keys
bound
named
function
keyseq
remove
current
binding
keyseq
keyseq
shell
command
cause
shell
command
executed
whenever
keyseq
entered
when
shell
command
executed
shell
sets
readline
line
variable
contents
readline
line
buffer
read
line
point
readline
mark
variables
current
location
insertion
point
saved
insertion
point
mark
respectively
executed
command
changes
value
read
line
line
readline
point
readline
mark
those
values
will
reflected
editing
state
list
sequences
bound
shell
commands
associated
commands
format
that
reused
input
return
value
unless
unrecognized
option
given
error
occurred
break
exit
from
within
while
until
select
loop
specified
break
levels
must
greater
than
number
enclosing
loops
enclosing
loops
exited
return
value
less
greater
than
equal
builtin
shell
builtin
arguments
execute
specified
shell
builtin
passing
arguments
return
exit
status
this
useful
when
defining
function
whose
name
same
shell
builtin
retaining
functionality
builtin
within
function
builtin
commonly
redefined
this
return
status
false
shell
builtin
shell
builtin
command
caller
expr
returns
context
active
subroutine
call
shell
function
script
executed
with
source
builtins
without
expr
caller
displays
line
number
source
filename
current
subroutine
call
negative
integer
supplied
expr
caller
displays
line
number
subroutine
name
source
file
corresponding
that
position
current
execution
call
stack
this
extra
information
used
example
print
stack
trace
current
frame
frame
return
value
unless
shell
executing
subroutine
call
expr
does
correspond
valid
position
call
stack
change
current
directory
supplied
value
home
shell
variable
fault
additional
arguments
following
ignored
variable
cdpath
defines
search
path
directory
containing
each
directory
name
cdpath
searched
alternative
directory
names
cdpath
separated
colon
null
directory
name
cdpath
same
current
direc
tory
begins
with
slash
then
cdpath
used
option
causes
physical
directory
structure
resolving
symbolic
links
while
traversing
before
processing
stances
also
option
builtin
command
option
forces
symbolic
links
followed
resolving
link
after
processing
instances
appears
processed
removing
immediately
previous
pathname
component
from
back
slash
beginning
option
supplied
with
current
working
directory
cannot
successfully
termined
after
successful
directory
change
will
return
unsuccessful
status
systems
that
support
option
presents
extended
attributes
associated
with
file
directory
argument
converted
oldpwd
before
directory
change
attempted
empty
directory
name
from
cdpath
used
first
argument
directory
change
successful
absolute
pathname
working
directory
written
standard
output
return
value
true
directory
cessfully
changed
false
otherwise
command
command
command
with
args
suppressing
normal
shell
function
lookup
only
builtin
commands
commands
found
path
executed
option
given
search
command
performed
using
default
value
path
that
guaranteed
find
standard
utilities
either
option
supplied
description
command
printed
option
causes
single
word
indicating
command
filename
used
invoke
command
displayed
option
produces
more
verbose
description
option
supplied
exit
status
command
found
neither
option
supplied
error
occurred
command
cannot
found
exit
status
otherwise
exit
command
builtin
exit
status
command
compgen
option
word
generate
possible
completion
matches
word
according
options
which
option
accepted
complete
builtin
with
exception
write
matches
standard
output
when
options
various
shell
variables
programmable
completion
facilities
while
available
will
have
useful
values
matches
will
generated
same
programmable
completion
code
generated
them
rectly
from
completion
specification
with
same
flags
word
specified
only
those
completions
matching
word
will
displayed
return
value
true
unless
invalid
option
supplied
matches
were
generated
complete
abcdefgjksuv
comp
option
action
globpat
wordlist
function
command
filterpat
prefix
suffix
name
name
complete
name
specify
arguments
each
name
should
completed
option
supplied
options
supplied
existing
completion
specifications
printed
that
allows
them
reused
input
option
removes
completion
specification
each
name
names
supplied
completion
specifications
option
indicates
that
other
supplied
options
actions
should
apply
fault
command
completion
that
completion
attempted
command
which
completion
previously
been
defined
option
indicates
that
other
supplied
options
actions
should
apply
empty
mand
completion
that
completion
attempted
blank
line
option
indicates
that
other
supplied
options
actions
should
apply
completion
initial
assignment
word
line
after
command
delimiter
such
which
usually
command
name
completion
multiple
options
plied
option
takes
precedence
over
both
take
precedence
over
supplied
other
name
arguments
ignored
these
completions
only
apply
case
specified
tion
process
applying
these
completion
specifications
when
word
completion
attempted
described
above
under
programmable
completion
other
options
specified
have
following
meanings
arguments
options
necessary
options
should
quoted
protect
them
from
expansion
before
complete
builtin
invoked
comp
option
comp
option
controls
several
aspects
compspec
behavior
beyond
simple
generation
completions
comp
option
bashdefault
perform
rest
default
bash
completions
compspec
generates
matches
default
readline
default
filename
completion
compspec
generates
matches
dirnames
perform
directory
name
completion
compspec
generates
matches
filenames
tell
readline
that
compspec
generates
filenames
perform
filename
specific
processing
like
adding
slash
directory
names
quoting
special
characters
suppress
trailing
spaces
intended
used
with
shell
functions
noquote
tell
readline
quote
completed
words
they
filenames
quoting
filenames
default
nosort
tell
readline
sort
list
possible
completions
alphabetically
nospace
tell
readline
append
space
default
words
completed
line
plusdirs
after
matches
defined
compspec
generated
directory
name
completion
tempted
matches
added
results
other
actions
action
action
following
generate
list
possible
completions
alias
alias
names
also
specified
arrayvar
array
variable
names
binding
readline
binding
names
builtin
names
shell
builtin
commands
also
specified
command
command
names
also
specified
directory
directory
names
also
specified
disabled
names
disabled
shell
builtins
enabled
names
enabled
shell
builtins
export
names
exported
shell
variables
also
specified
file
file
names
also
specified
function
names
shell
functions
group
group
names
also
specified
helptopic
help
topics
accepted
help
builtin
hostname
hostnames
taken
from
file
specified
hostfile
shell
variable
names
control
active
also
specified
keyword
shell
reserved
words
also
specified
running
names
running
jobs
control
active
service
service
names
also
specified
setopt
valid
arguments
option
builtin
shopt
shell
option
names
accepted
shopt
builtin
signal
signal
names
stopped
names
stopped
jobs
control
active
user
user
names
also
specified
variable
names
shell
variables
also
specified
command
command
executed
subshell
environment
output
used
possible
completions
function
shell
function
function
executed
current
shell
environment
when
function
cuted
first
argument
name
command
whose
arguments
being
completed
second
argument
word
being
completed
third
argument
word
preceding
word
being
completed
current
command
line
when
finishes
possible
completions
retrieved
from
value
compreply
array
variable
globpat
pathname
expansion
pattern
globpat
expanded
generate
possible
completions
prefix
prefix
added
beginning
each
possible
completion
after
other
options
have
been
plied
suffix
suffix
appended
each
possible
completion
after
other
options
have
been
applied
wordlist
wordlist
split
using
characters
special
variable
delimiters
each
resul
tant
word
expanded
shell
quoting
honored
within
wordlist
order
provide
mechanism
words
contain
shell
metacharacters
characters
value
possible
comple
tions
members
resultant
list
which
match
word
being
completed
filterpat
filterpat
pattern
used
pathname
expansion
applied
list
possible
comple
tions
generated
preceding
options
arguments
each
completion
matching
filterpat
moved
from
list
leading
filterpat
negates
pattern
this
case
completion
matching
filterpat
removed
return
value
true
unless
invalid
option
supplied
option
other
than
supplied
without
name
argument
attempt
made
remove
completion
specification
name
which
specification
exists
error
occurs
adding
completion
specification
compopt
option
option
name
modify
completion
options
each
name
according
options
currently
executing
completion
names
supplied
options
given
display
completion
options
each
name
rent
completion
possible
values
option
those
valid
complete
builtin
described
above
option
indicates
that
other
supplied
options
should
apply
default
command
completion
that
completion
attempted
command
which
completion
previously
been
defined
option
dicates
that
other
supplied
options
should
apply
empty
command
completion
that
completion
tempted
blank
line
option
indicates
that
other
supplied
options
should
apply
completion
initial
assignment
word
line
after
command
delimiter
such
which
usually
command
name
completion
return
value
true
unless
invalid
option
supplied
attempt
made
modify
options
name
which
completion
specification
exists
output
error
occurs
continue
resume
next
iteration
enclosing
while
until
select
loop
specified
resume
enclosing
loop
must
greater
than
number
enclosing
loops
last
enclos
loop
level
loop
resumed
return
value
unless
greater
than
equal
declare
aaffgiilnrtux
name
value
typeset
aaffgiilnrtux
name
value
declare
variables
give
them
attributes
names
given
then
display
values
variables
option
will
display
attributes
values
each
name
when
used
with
name
arguments
ditional
options
other
than
ignored
when
supplied
without
name
arguments
will
display
attributes
values
variables
having
attributes
specified
additional
options
other
options
supplied
with
declare
will
display
attributes
values
shell
vari
ables
option
will
restrict
display
shell
functions
option
inhibits
display
function
definitions
only
function
name
attributes
printed
extdebug
shell
option
abled
using
shopt
source
file
name
line
number
where
each
name
defined
displayed
well
option
implies
option
forces
variables
created
modified
global
scope
even
when
declare
executed
shell
function
ignored
other
cases
option
causes
local
variables
inherit
attributes
except
nameref
attribute
value
existing
variable
with
same
name
surrounding
scope
there
existing
variable
local
variable
initially
following
options
used
restrict
output
variables
with
specified
attribute
give
variables
attributes
each
name
indexed
array
variable
arrays
above
each
name
associative
array
variable
arrays
above
function
names
only
variable
treated
integer
arithmetic
evaluation
arithmetic
evaluation
above
formed
when
variable
assigned
value
when
variable
assigned
value
upper
case
characters
converted
lower
case
case
attribute
disabled
give
each
name
nameref
attribute
making
name
reference
another
variable
that
other
variable
defined
value
name
references
assignments
attribute
modifications
name
except
those
using
changing
attribute
itself
performed
variable
referenced
name
value
nameref
attribute
cannot
applied
array
variables
make
names
readonly
these
names
cannot
then
assigned
values
subsequent
assignment
statements
unset
give
each
name
trace
attribute
traced
functions
inherit
debug
return
traps
from
calling
shell
trace
attribute
special
meaning
variables
when
variable
assigned
value
lower
case
characters
converted
upper
case
lower
case
attribute
disabled
mark
names
export
subsequent
commands
environment
using
instead
turns
attribute
instead
with
exceptions
that
used
destroy
array
variables
will
remove
readonly
attribute
when
used
function
declare
typeset
make
each
name
local
with
local
command
unless
option
supplied
variable
name
followed
value
value
variable
value
when
using
compound
assignment
syntax
create
array
variables
additional
attributes
take
effect
until
subsequent
signments
return
value
unless
invalid
option
encountered
attempt
made
define
function
using
attempt
made
assign
value
readonly
variable
attempt
made
assign
value
array
variable
without
using
compound
assignment
syntax
arrays
above
names
valid
shell
variable
name
attempt
made
turn
readonly
status
readonly
variable
attempt
made
turn
array
status
array
variable
attempt
made
display
existent
function
with
dirs
clpv
without
options
displays
list
currently
remembered
directories
default
display
single
line
with
directory
names
separated
spaces
directories
added
list
with
pushd
command
popd
command
removes
entries
from
list
current
directory
always
first
directory
stack
clears
directory
stack
deleting
entries
produces
listing
using
full
pathnames
default
listing
format
uses
tilde
denote
home
directory
print
directory
stack
with
entry
line
print
directory
stack
with
entry
line
prefixing
each
entry
with
index
stack
displays
entry
counting
from
left
list
shown
dirs
when
invoked
without
options
starting
with
zero
displays
entry
counting
from
right
list
shown
dirs
when
invoked
without
options
starting
with
zero
return
value
unless
invalid
option
supplied
indexes
beyond
directory
stack
disown
jobspec
without
options
remove
each
jobspec
from
table
active
jobs
jobspec
present
neither
option
supplied
current
used
option
given
each
jobspec
removed
from
table
marked
that
sighup
sent
shell
receives
sighup
jobspec
supplied
option
means
remove
mark
jobs
option
without
jobspec
argument
restricts
operation
running
jobs
return
value
unless
jobspec
does
spec
valid
echo
output
args
separated
spaces
followed
newline
return
status
unless
write
error
curs
specified
trailing
newline
suppressed
option
given
interpretation
following
backslash
escaped
characters
enabled
option
disables
interpretation
these
escape
characters
even
systems
where
they
interpreted
default
echo
shell
option
used
dynamically
determine
whether
echo
expands
these
escape
characters
default
echo
does
interpret
mean
options
echo
interprets
following
escape
sequences
alert
bell
backspace
suppress
further
output
escape
character
form
feed
line
carriage
return
horizontal
vertical
backslash
eight
character
whose
value
octal
value
zero
three
octal
digits
eight
character
whose
value
hexadecimal
value
digits
uhhhh
unicode
character
whose
value
hexadecimal
value
hhhh
four
uhhhhhhhh
unicode
character
whose
value
hexadecimal
value
hhhhhhhh
eight
digits
enable
dnps
filename
name
enable
disable
builtin
shell
commands
disabling
builtin
allows
disk
command
which
same
name
shell
builtin
executed
without
specifying
full
pathname
even
though
shell
normally
searches
builtins
before
disk
commands
used
each
name
disabled
otherwise
names
enabled
example
test
binary
found
path
instead
shell
builtin
version
enable
test
option
means
load
builtin
command
name
from
shared
object
filename
systems
that
support
dynamic
loading
option
will
delete
builtin
previously
loaded
with
name
guments
given
option
supplied
list
shell
builtins
printed
with
other
tion
arguments
list
consists
enabled
shell
builtins
supplied
only
disabled
builtins
printed
supplied
list
printed
includes
builtins
with
indication
whether
each
enabled
supplied
output
restricted
posix
special
builtins
return
value
unless
name
shell
builtin
there
error
loading
builtin
from
shared
ject
eval
args
read
concatenated
together
into
single
command
this
command
then
read
executed
shell
exit
status
returned
value
eval
there
args
only
null
argu
ments
eval
returns
exec
name
command
arguments
command
specified
replaces
shell
process
created
arguments
become
argu
ments
command
option
supplied
shell
places
dash
beginning
zeroth
argu
ment
passed
command
this
what
login
does
option
causes
command
executed
with
empty
environment
supplied
shell
passes
name
zeroth
argument
executed
command
command
cannot
executed
some
reason
interactive
shell
exits
unless
execfail
shell
tion
enabled
that
case
returns
failure
interactive
shell
returns
failure
file
cannot
executed
subshell
exits
unconditionally
exec
fails
command
specified
redirections
take
effect
current
shell
return
status
there
redirection
error
return
status
exit
cause
shell
exit
with
status
omitted
exit
status
that
last
command
ecuted
trap
exit
executed
before
shell
terminates
export
name
word
export
supplied
names
marked
automatic
export
environment
subsequently
executed
commands
option
given
names
refer
functions
names
given
option
plied
list
names
exported
variables
printed
option
causes
export
property
removed
from
each
name
variable
name
followed
word
value
variable
word
export
returns
exit
status
unless
invalid
option
encountered
names
valid
shell
variable
name
supplied
with
name
that
function
ename
first
last
first
form
selects
range
commands
from
first
last
from
history
list
displays
edits
executes
them
first
last
specified
string
locate
last
command
beginning
with
that
string
number
index
into
history
list
where
negative
number
used
offset
from
current
command
number
when
listing
first
last
equivalent
equiva
lent
current
command
usually
command
otherwise
equivalent
invalid
last
specified
current
command
listing
that
prints
last
commands
first
otherwise
first
specified
previous
command
editing
listing
option
suppresses
command
numbers
when
listing
option
reverses
order
commands
option
given
commands
listed
standard
output
otherwise
editor
given
ename
invoked
file
containing
those
commands
ename
given
value
fcedit
variable
used
value
editor
fcedit
neither
variable
used
when
editing
complete
edited
commands
echoed
executed
second
form
command
executed
after
each
instance
replaced
command
inter
preted
same
first
above
useful
alias
with
this
that
typing
runs
last
command
beginning
with
typing
executes
last
command
first
form
used
return
value
unless
invalid
option
encountered
first
last
specify
history
lines
range
option
supplied
return
value
value
last
command
executed
failure
error
occurs
with
temporary
file
commands
second
form
used
return
status
that
command
executed
unless
does
specify
valid
history
line
which
case
returns
failure
jobspec
resume
jobspec
foreground
make
current
jobspec
present
shell
notion
current
used
return
value
that
command
placed
into
foreground
failure
when
control
disabled
when
with
control
enabled
jobspec
does
specify
valid
jobspec
specifies
that
started
without
control
getopts
optstring
name
getopts
used
shell
procedures
parse
positional
parameters
optstring
contains
option
characters
recognized
character
followed
colon
option
expected
have
argument
which
should
separated
from
white
space
colon
question
mark
characters
used
option
characters
each
time
invoked
getopts
places
next
option
shell
variable
name
initializing
name
does
exist
index
next
argument
processed
into
variable
optind
optind
initialized
each
time
shell
shell
script
invoked
when
option
requires
gument
getopts
places
that
argument
into
variable
optarg
shell
does
reset
optind
automati
cally
must
manually
reset
between
multiple
calls
getopts
within
same
shell
invocation
parameters
used
when
options
encountered
getopts
exits
with
return
value
greater
than
zero
optind
index
first
option
argument
name
getopts
normally
parses
positional
parameters
more
arguments
supplied
values
getopts
parses
those
instead
getopts
report
errors
ways
first
character
optstring
colon
silent
error
report
used
normal
operation
diagnostic
messages
printed
when
invalid
options
missing
option
guments
encountered
variable
opterr
error
messages
will
displayed
even
first
character
optstring
colon
invalid
option
seen
getopts
places
into
name
silent
prints
error
message
sets
optarg
getopts
silent
option
character
found
placed
optarg
diagnostic
message
printed
required
argument
found
getopts
silent
question
mark
placed
name
optarg
unset
diagnostic
message
printed
getopts
silent
then
colon
placed
name
optarg
option
character
found
getopts
returns
true
option
specified
unspecified
found
returns
false
tions
encountered
error
occurs
hash
filename
name
each
time
hash
invoked
full
pathname
command
name
determined
searching
directories
path
remembered
previously
remembered
pathname
discarded
option
supplied
path
search
performed
filename
used
full
filename
command
option
causes
shell
forget
remembered
locations
option
causes
shell
forget
remembered
location
each
name
option
supplied
full
pathname
which
each
name
corresponds
printed
multiple
name
arguments
supplied
with
name
printed
before
hashed
full
pathname
option
causes
output
displayed
format
that
reused
input
arguments
given
only
supplied
information
about
remembered
commands
printed
return
status
true
unless
name
found
invalid
option
supplied
help
pattern
display
helpful
information
about
builtin
commands
pattern
specified
help
gives
detailed
help
commands
matching
pattern
otherwise
help
builtins
shell
control
structures
printed
display
short
description
each
pattern
display
description
each
pattern
manpage
like
format
display
only
short
usage
synopsis
each
pattern
return
status
unless
command
matches
pattern
history
history
history
offset
history
start
history
anrw
filename
history
history
with
options
display
command
history
list
with
line
numbers
lines
listed
with
have
been
modi
fied
argument
lists
only
last
lines
shell
variable
histtimeformat
null
used
format
string
strftime
display
time
stamp
associated
with
each
displayed
history
entry
intervening
blank
printed
between
formatted
time
stamp
history
line
filename
supplied
used
name
history
file
value
histfile
used
tions
supplied
have
following
meanings
clear
history
list
deleting
entries
offset
delete
history
entry
position
offset
offset
negative
interpreted
relative
greater
than
last
history
position
negative
indices
count
back
from
tory
index
refers
current
history
command
start
delete
history
entries
between
positions
start
inclusive
positive
negative
values
start
interpreted
described
above
append
history
lines
history
file
these
history
lines
entered
since
ginning
current
bash
session
already
appended
history
file
read
history
lines
already
read
from
history
file
into
current
history
list
these
lines
appended
history
file
since
beginning
current
bash
session
read
contents
history
file
append
them
current
history
list
write
current
history
list
history
file
overwriting
history
file
contents
perform
history
substitution
following
args
display
result
standard
output
does
store
results
history
list
each
must
quoted
disable
normal
history
pansion
store
args
history
list
single
entry
last
command
history
list
removed
before
args
added
histtimeformat
variable
time
stamp
information
associated
with
each
history
entry
writ
history
file
marked
with
history
comment
character
when
history
file
read
lines
ginning
with
history
comment
character
followed
immediately
digit
interpreted
timestamps
following
history
entry
return
value
unless
invalid
option
encountered
error
occurs
while
reading
writing
history
file
invalid
offset
supplied
argument
history
expansion
supplied
argument
fails
jobs
lnprs
jobspec
jobs
command
args
first
form
lists
active
jobs
options
have
following
meanings
list
process
addition
normal
information
display
information
only
about
jobs
that
have
changed
status
since
user
last
notified
their
status
list
only
process
process
group
leader
display
only
running
jobs
display
only
stopped
jobs
jobspec
given
output
restricted
information
about
that
return
status
unless
invalid
option
encountered
invalid
jobspec
supplied
option
supplied
jobs
replaces
jobspec
found
command
args
with
corresponding
process
group
executes
command
passing
args
returning
exit
status
kill
sigspec
signum
sigspec
jobspec
kill
sigspec
exit
status
send
signal
named
sigspec
signum
processes
named
jobspec
sigspec
either
case
insensitive
signal
name
such
sigkill
with
without
prefix
signal
number
signum
signal
number
sigspec
present
then
sigterm
assumed
argument
lists
signal
names
arguments
supplied
when
given
names
signals
corresponding
argu
ments
listed
return
status
exit
status
argument
number
specifying
either
signal
number
exit
status
process
terminated
signal
option
equivalent
kill
returns
true
least
signal
successfully
sent
false
error
occurs
invalid
tion
encountered
each
arithmetic
expression
evaluated
arithmetic
evaluation
above
last
evaluates
returns
returned
otherwise
local
option
name
value
each
argument
local
variable
named
name
created
assigned
value
option
options
accepted
declare
when
local
used
within
function
causes
variable
name
have
visible
scope
restricted
that
function
children
name
shell
options
made
local
function
which
local
invoked
shell
options
changed
using
builtin
inside
func
tion
restored
their
original
values
when
function
returns
restore
effected
series
commands
were
executed
restore
values
that
were
place
before
function
with
oper
ands
local
writes
list
local
variables
standard
output
error
local
when
within
function
return
status
unless
local
used
outside
function
invalid
name
plied
name
readonly
variable
logout
exit
login
shell
mapfile
delim
count
origin
count
callback
quantum
array
readarray
delim
count
origin
count
callback
quantum
array
read
lines
from
standard
input
into
indexed
array
variable
array
from
file
descriptor
option
supplied
variable
mapfile
default
array
options
supplied
have
following
meanings
first
character
delim
used
terminate
each
input
line
rather
than
newline
delim
empty
string
mapfile
will
terminate
line
when
reads
character
copy
most
count
lines
count
lines
copied
begin
assigning
array
index
origin
default
index
discard
first
count
lines
read
remove
trailing
delim
default
newline
from
each
line
read
read
lines
from
file
descriptor
instead
standard
input
evaluate
callback
each
time
quantum
lines
read
option
specifies
quantum
specify
number
lines
read
between
each
call
callback
specified
without
default
quantum
when
callback
evaluated
supplied
index
next
array
element
assigned
line
assigned
that
element
additional
guments
callback
evaluated
after
line
read
before
array
element
assigned
supplied
with
explicit
origin
mapfile
will
clear
array
before
assigning
mapfile
returns
successfully
unless
invalid
option
option
argument
supplied
array
invalid
unassignable
array
indexed
array
popd
removes
entries
from
directory
stack
with
arguments
removes
directory
from
stack
performs
directory
arguments
supplied
have
following
meanings
suppresses
normal
change
directory
when
removing
directories
from
stack
that
only
stack
manipulated
removes
entry
counting
from
left
list
shown
dirs
starting
with
zero
exam
popd
removes
first
directory
popd
second
removes
entry
counting
from
right
list
shown
dirs
starting
with
zero
ample
popd
removes
last
directory
popd
next
last
popd
command
successful
dirs
performed
well
return
status
popd
returns
false
invalid
option
encountered
directory
stack
empty
existent
directory
stack
entry
specified
directory
change
fails
printf
format
arguments
write
formatted
arguments
standard
output
under
control
format
option
causes
output
assigned
variable
rather
than
being
printed
standard
output
format
character
string
which
contains
three
types
objects
plain
characters
which
simply
copied
standard
output
character
escape
sequences
which
converted
copied
standard
output
format
specifications
each
which
causes
printing
next
successive
argument
addition
standard
printf
format
specifications
printf
interprets
following
extensions
causes
printf
expand
backslash
escape
sequences
corresponding
argument
same
echo
causes
printf
output
corresponding
argument
format
that
reused
shell
input
datefmt
causes
printf
output
date
time
string
resulting
from
using
datefmt
format
string
strf
time
corresponding
argument
integer
representing
number
seconds
since
epoch
special
argument
values
used
represents
current
time
represents
time
shell
invoked
argument
specified
conversion
behaves
been
given
this
exception
usual
printf
behavior
directives
field
width
precision
arguments
from
format
specification
write
that
many
bytes
from
that
wide
field
expanded
argument
which
usually
contains
more
characters
than
original
arguments
string
format
specifiers
treated
constants
except
that
leading
plus
minus
sign
allowed
leading
character
single
double
quote
value
ascii
value
following
character
format
reused
necessary
consume
arguments
format
requires
more
arguments
than
supplied
extra
format
specifications
behave
zero
value
null
string
appropriate
been
supplied
return
value
zero
success
zero
failure
pushd
pushd
adds
directory
directory
stack
rotates
stack
making
stack
current
working
directory
with
arguments
pushd
exchanges
directories
returns
unless
directory
stack
empty
arguments
supplied
have
following
meanings
suppresses
normal
change
directory
when
rotating
adding
directories
stack
that
only
stack
manipulated
rotates
stack
that
directory
counting
from
left
list
shown
dirs
start
with
zero
rotates
stack
that
directory
counting
from
right
list
shown
dirs
start
with
zero
adds
directory
stack
making
current
working
directory
been
supplied
argument
builtin
pushd
command
successful
dirs
performed
well
first
form
used
pushd
returns
unless
fails
with
second
form
pushd
returns
unless
directory
stack
empty
existent
directory
stack
element
specified
directory
change
specified
current
rectory
fails
print
absolute
pathname
current
working
directory
pathname
printed
contains
symbolic
links
option
supplied
physical
option
builtin
command
enabled
option
used
pathname
printed
contain
symbolic
links
return
status
unless
error
occurs
while
reading
name
current
directory
invalid
option
supplied
read
aname
delim
text
nchars
nchars
prompt
timeout
name
line
read
from
standard
input
from
file
descriptor
supplied
argument
option
split
into
words
described
above
under
word
splitting
first
word
assigned
first
name
second
word
second
name
there
more
words
than
names
remaining
words
their
intervening
delimiters
assigned
last
name
there
fewer
words
read
from
input
stream
than
names
remaining
names
assigned
empty
values
characters
used
split
line
into
words
using
same
rules
shell
uses
expansion
described
above
under
word
splitting
backslash
character
used
remove
special
meaning
next
character
read
line
continuation
options
supplied
have
following
meanings
aname
words
assigned
sequential
indices
array
variable
aname
starting
aname
before
values
assigned
other
name
arguments
ignored
delim
first
character
delim
used
terminate
input
line
rather
than
newline
delim
empty
string
read
will
terminate
line
when
reads
character
standard
input
coming
from
terminal
readline
readline
above
used
obtain
line
readline
uses
current
default
line
editing
previously
active
editing
tings
uses
readline
default
filename
completion
text
readline
being
used
read
line
text
placed
into
editing
buffer
before
editing
gins
nchars
read
returns
after
reading
nchars
characters
rather
than
waiting
complete
line
input
honors
delimiter
fewer
than
nchars
characters
read
before
delimiter
nchars
read
returns
after
reading
exactly
nchars
characters
rather
than
waiting
complete
line
input
unless
encountered
read
times
delimiter
characters
encountered
input
treated
specially
cause
read
return
until
nchars
characters
read
result
split
characters
intent
that
variable
assigned
exactly
characters
read
with
exception
backslash
option
below
prompt
display
prompt
standard
error
without
trailing
newline
before
attempting
read
input
prompt
displayed
only
input
coming
from
terminal
backslash
does
escape
character
backslash
considered
part
line
particular
backslash
newline
pair
then
used
line
continuation
silent
mode
input
coming
from
terminal
characters
echoed
timeout
cause
read
time
return
failure
complete
line
input
specified
number
char
acters
read
within
timeout
seconds
timeout
decimal
number
with
fractional
portion
following
decimal
point
this
option
only
effective
read
reading
input
from
terminal
pipe
other
special
file
effect
when
reading
from
regular
files
read
times
read
saves
partial
input
read
into
specified
variable
name
timeout
read
returns
mediately
without
trying
read
data
exit
status
input
available
speci
fied
file
descriptor
zero
otherwise
exit
status
greater
than
timeout
ceeded
read
input
from
file
descriptor
names
supplied
line
read
without
ending
delimiter
otherwise
unmodified
assigned
variable
reply
exit
status
zero
unless
file
encountered
read
times
which
case
status
greater
than
variable
assignment
error
such
assigning
readonly
variable
occurs
invalid
file
descriptor
supplied
argument
readonly
name
word
given
names
marked
readonly
values
these
names
changed
subsequent
assignment
option
supplied
functions
corresponding
names
marked
option
stricts
variables
indexed
arrays
option
restricts
variables
associative
arrays
both
options
supplied
takes
precedence
name
arguments
given
option
plied
list
readonly
names
printed
other
options
used
restrict
output
subset
readonly
names
option
causes
output
displayed
format
that
reused
input
variable
name
followed
word
value
variable
word
turn
status
unless
invalid
option
encountered
names
valid
shell
variable
name
supplied
with
name
that
function
return
causes
function
stop
executing
return
value
specified
caller
omitted
return
status
that
last
command
executed
function
body
return
executed
trap
handler
last
command
used
determine
status
last
command
executed
before
trap
handler
return
executed
during
debug
trap
last
command
used
determine
status
last
command
executed
trap
handler
before
return
invoked
return
used
outside
function
during
ecution
script
source
command
causes
shell
stop
executing
that
script
return
either
exit
status
last
command
executed
within
script
exit
status
script
supplied
return
value
least
significant
bits
return
status
zero
return
supplied
numeric
argument
used
outside
function
during
execution
script
source
command
associated
with
return
trap
executed
before
execution
resumes
after
func
tion
script
abefhkmnptuvxbcehpt
option
name
abefhkmnptuvxbcehpt
option
name
without
options
name
value
each
shell
variable
displayed
format
that
reused
input
setting
resetting
currently
variables
read
only
variables
cannot
reset
posix
mode
only
shell
variables
listed
output
sorted
according
current
locale
when
options
specified
they
unset
shell
attributes
arguments
remaining
after
option
processing
treated
values
positional
parameters
assigned
order
options
specified
have
following
meanings
each
variable
function
that
created
modified
given
export
attribute
marked
export
environment
subsequent
commands
report
status
terminated
background
jobs
immediately
rather
than
before
next
primary
prompt
this
effective
only
when
control
enabled
exit
immediately
pipeline
which
consist
single
simple
command
list
compound
command
shell
grammar
above
exits
with
zero
status
shell
does
exit
mand
that
fails
part
command
list
immediately
following
while
until
keyword
part
test
following
elif
reserved
words
part
command
executed
list
cept
command
following
final
command
pipeline
last
mand
return
value
being
inverted
with
compound
command
other
than
subshell
returns
zero
status
because
command
failed
while
being
ignored
shell
does
exit
trap
executed
before
shell
exits
this
option
applies
shell
environment
each
subshell
environment
separately
command
execution
environment
above
cause
shells
exit
before
executing
commands
subshell
compound
command
shell
function
executes
context
where
being
ignored
none
commands
executed
within
compound
command
function
body
will
affected
setting
even
command
returns
failure
status
compound
command
shell
function
sets
while
executing
context
where
ignored
that
setting
will
have
effect
until
compound
command
command
containing
function
call
completes
disable
pathname
expansion
remember
location
commands
they
looked
execution
this
enabled
default
arguments
form
assignment
statements
placed
environment
command
just
those
that
precede
command
name
monitor
mode
control
enabled
this
option
default
interactive
shells
tems
that
support
control
above
processes
separate
process
group
when
background
completes
shell
prints
line
containing
exit
status
read
commands
execute
them
this
used
check
shell
script
syntax
errors
this
ignored
interactive
shells
option
name
option
name
following
allexport
same
braceexpand
same
emacs
emacs
style
command
line
editing
interface
this
enabled
default
when
shell
interactive
unless
shell
started
with
noediting
option
this
also
affects
editing
interface
used
read
errexit
same
errtrace
same
functrace
same
hashall
same
histexpand
same
history
enable
command
history
described
above
under
history
this
option
default
interactive
shells
ignoreeof
effect
shell
command
ignoreeof
been
executed
shell
variables
above
keyword
same
monitor
same
noclobber
same
noexec
same
noglob
same
nolog
currently
ignored
notify
same
nounset
same
onecmd
same
physical
same
pipefail
return
value
pipeline
value
last
rightmost
command
exit
with
zero
status
zero
commands
pipeline
exit
successfully
this
tion
disabled
default
posix
change
behavior
bash
where
default
operation
differs
from
posix
standard
match
standard
posix
mode
also
below
reference
document
that
tails
posix
mode
affects
bash
behavior
privileged
same
verbose
same
style
command
line
editing
interface
this
also
affects
editing
interface
used
read
xtrace
same
supplied
with
option
name
values
current
options
printed
plied
with
option
name
series
commands
recreate
current
option
settings
played
standard
output
turn
privileged
mode
this
mode
bash
files
processed
shell
func
tions
inherited
from
environment
shellopts
bashopts
cdpath
globignore
variables
they
appear
environment
ignored
shell
started
with
effec
tive
user
group
equal
real
user
group
option
supplied
these
actions
taken
effective
user
real
user
option
supplied
startup
effective
user
reset
turning
this
option
causes
effective
user
group
real
user
group
exit
after
reading
executing
command
treat
unset
variables
parameters
other
than
special
parameters
error
when
performing
parameter
expansion
expansion
attempted
unset
variable
parameter
shell
prints
error
message
interactive
exits
with
zero
status
print
shell
input
lines
they
read
after
expanding
each
simple
command
command
case
command
select
command
arithmetic
command
display
expanded
value
followed
command
expanded
arguments
sociated
word
list
shell
performs
brace
expansion
brace
expansion
above
this
default
bash
does
overwrite
existing
file
with
redirection
operators
this
overridden
when
creating
output
files
using
redirection
operator
instead
trap
inherited
shell
functions
command
substitutions
commands
executed
subshell
environment
trap
normally
inherited
such
cases
enable
style
history
substitution
this
option
default
when
shell
interactive
shell
does
resolve
symbolic
links
when
executing
commands
such
that
change
current
working
directory
uses
physical
directory
structure
instead
default
bash
lows
logical
chain
directories
when
performing
commands
which
change
current
directory
traps
debug
return
inherited
shell
functions
command
substitutions
commands
executed
subshell
environment
debug
return
traps
normally
inherited
such
cases
arguments
follow
this
option
then
positional
parameters
unset
otherwise
posi
tional
parameters
args
even
some
them
begin
with
signal
options
cause
remaining
args
assigned
positional
parameters
options
turned
there
args
positional
parameters
remain
unchanged
options
default
unless
otherwise
noted
using
rather
than
causes
these
options
turned
options
also
specified
arguments
invocation
shell
current
options
found
return
status
always
true
unless
invalid
option
encountered
shift
positional
parameters
from
renamed
parameters
represented
numbers
down
unset
must
negative
number
less
than
equal
parameters
changed
given
assumed
greater
than
positional
parameters
changed
return
status
greater
than
zero
greater
than
less
than
zero
otherwise
shopt
pqsu
optname
toggle
values
settings
controlling
optional
shell
behavior
settings
either
those
listed
below
option
used
those
available
with
option
builtin
command
with
options
with
option
list
settable
options
displayed
with
indication
whether
each
optnames
supplied
output
restricted
those
options
option
causes
output
displayed
form
that
reused
input
other
options
have
following
meanings
enable
each
optname
disable
unset
each
optname
suppresses
normal
output
quiet
mode
return
status
indicates
whether
optname
multiple
optname
arguments
given
with
return
status
zero
optnames
enabled
zero
otherwise
restricts
values
optname
those
defined
option
builtin
either
used
with
optname
arguments
shopt
shows
only
those
options
which
unset
respectively
unless
otherwise
noted
shopt
options
disabled
unset
default
return
status
when
listing
options
zero
optnames
enabled
zero
otherwise
when
setting
unsetting
options
return
status
zero
unless
optname
valid
shell
option
list
shopt
options
assoc
expand
once
shell
suppresses
multiple
evaluation
associative
array
subscripts
during
arithmetic
expression
evaluation
while
executing
builtins
that
perform
variable
assignments
while
cuting
builtins
that
perform
array
dereferencing
autocd
command
name
that
name
directory
executed
were
argument
command
this
option
only
used
interactive
shells
cdable
vars
argument
builtin
command
that
directory
assumed
name
variable
whose
value
directory
change
cdspell
minor
errors
spelling
directory
component
command
will
corrected
errors
checked
transposed
characters
missing
character
character
many
correction
found
corrected
filename
printed
command
proceeds
this
option
only
used
interactive
shells
checkhash
bash
checks
that
command
found
hash
table
exists
before
trying
execute
hashed
command
longer
exists
normal
path
search
performed
checkjobs
bash
lists
status
stopped
running
jobs
before
exiting
interactive
shell
jobs
running
this
causes
exit
deferred
until
second
exit
attempted
without
intervening
command
control
above
shell
always
postpones
exiting
jobs
stopped
checkwinsize
bash
checks
window
size
after
each
external
builtin
command
necessary
dates
values
lines
columns
this
option
enabled
default
cmdhist
bash
attempts
save
lines
multiple
line
command
same
history
entry
this
allows
easy
editing
multi
line
commands
this
option
enabled
default
only
effect
command
history
enabled
described
above
under
history
compat
compat
compat
compat
compat
compat
compat
these
control
aspects
shell
compatibility
mode
shell
compatibility
mode
below
complete
fullquote
bash
quotes
shell
metacharacters
filenames
directory
names
when
performing
comple
tion
bash
removes
metacharacters
such
dollar
sign
from
characters
that
will
quoted
completed
filenames
when
these
metacharacters
appear
shell
variable
refer
ences
words
completed
this
means
that
dollar
signs
variable
names
that
expand
direc
tories
will
quoted
however
dollar
signs
appearing
filenames
will
quoted
ther
this
active
only
when
bash
using
backslashes
quote
completed
filenames
this
vari
able
default
which
default
bash
behavior
versions
through
direxpand
bash
replaces
directory
names
with
results
word
expansion
when
performing
filename
completion
this
changes
contents
readline
editing
buffer
bash
attempts
preserve
what
user
typed
dirspell
bash
attempts
spelling
correction
directory
names
during
word
completion
directory
name
initially
supplied
does
exist
dotglob
bash
includes
filenames
beginning
with
results
pathname
expansion
file
names
must
always
matched
explicitly
even
dotglob
execfail
interactive
shell
will
exit
cannot
execute
file
specified
argument
exec
builtin
command
interactive
shell
does
exit
exec
fails
expand
aliases
aliases
expanded
described
above
under
aliases
this
option
enabled
default
interactive
shells
extdebug
shell
invocation
shell
startup
file
arrange
execute
debugger
profile
fore
shell
starts
identical
debugger
option
after
invocation
behavior
tended
debuggers
enabled
option
declare
builtin
displays
source
file
name
line
number
correspond
each
function
name
supplied
argument
command
debug
trap
returns
zero
value
next
command
skipped
executed
command
debug
trap
returns
value
shell
executing
subroutine
shell
function
shell
script
executed
source
builtins
shell
simulates
call
return
bash
argc
bash
argv
updated
described
their
descriptions
above
function
tracing
enabled
command
substitution
shell
functions
subshells
invoked
with
command
inherit
debug
return
traps
error
tracing
enabled
command
substitution
shell
functions
subshells
invoked
with
command
inherit
trap
extglob
extended
pattern
matching
features
described
above
under
pathname
expansion
enabled
extquote
string
string
quoting
performed
within
parameter
expansions
enclosed
quotes
this
option
enabled
default
failglob
patterns
which
fail
match
filenames
during
pathname
expansion
result
expansion
force
fignore
suffixes
specified
fignore
shell
variable
cause
words
ignored
when
perform
word
completion
even
ignored
words
only
possible
completions
shell
variables
above
description
fignore
this
option
enabled
default
globasciiranges
range
expressions
used
pattern
matching
bracket
expressions
pattern
matching
above
behave
traditional
locale
when
performing
comparisons
that
current
locale
collating
sequence
taken
into
account
will
collate
between
upper
case
lower
case
ascii
characters
will
collate
together
globstar
pattern
used
pathname
expansion
context
will
match
files
zero
more
rectories
subdirectories
pattern
followed
only
directories
subdirectories
match
errfmt
shell
error
messages
written
standard
error
message
format
histappend
history
list
appended
file
named
value
histfile
variable
when
shell
exits
rather
than
overwriting
file
histreedit
readline
being
used
user
given
opportunity
edit
failed
history
stitution
histverify
readline
being
used
results
history
substitution
immediately
passed
shell
parser
instead
resulting
line
loaded
into
readline
editing
buffer
allowing
further
modification
hostcomplete
readline
being
used
bash
will
attempt
perform
hostname
completion
when
word
taining
being
completed
completing
under
readline
above
this
enabled
default
huponexit
bash
will
send
sighup
jobs
when
interactive
login
shell
exits
inherit
errexit
command
substitution
inherits
value
errexit
option
instead
unsetting
subshell
environment
this
option
enabled
when
posix
mode
enabled
interactive
comments
allow
word
beginning
with
cause
that
word
remaining
characters
that
line
ignored
interactive
shell
comments
above
this
option
enabled
default
lastpipe
control
active
shell
runs
last
command
pipeline
executed
background
current
shell
environment
lithist
cmdhist
option
enabled
multi
line
commands
saved
history
with
embedded
newlines
rather
than
using
semicolon
separators
where
possible
localvar
inherit
local
variables
inherit
value
attributes
variable
same
name
that
exists
previous
scope
before
value
assigned
nameref
attribute
inherited
localvar
unset
calling
unset
local
variables
previous
function
scopes
marks
them
subsequent
lookups
find
them
unset
until
that
function
returns
this
identical
behavior
unsetting
local
variables
current
function
scope
login
shell
shell
sets
this
option
started
login
shell
invocation
above
value
changed
mailwarn
file
that
bash
checking
mail
been
accessed
since
last
time
checked
message
mail
mailfile
been
read
displayed
empty
completion
readline
being
used
bash
will
attempt
search
path
possible
completions
when
completion
attempted
empty
line
nocaseglob
bash
matches
filenames
case
insensitive
fashion
when
performing
pathname
expansion
pathname
expansion
above
nocasematch
bash
matches
patterns
case
insensitive
fashion
when
performing
matching
while
executing
case
conditional
commands
when
performing
pattern
substitution
word
expansions
when
tering
possible
completions
part
programmable
completion
nullglob
bash
allows
patterns
which
match
files
pathname
expansion
above
expand
null
string
rather
than
themselves
progcomp
programmable
completion
facilities
programmable
completion
above
enabled
this
option
enabled
default
progcomp
alias
programmable
completion
enabled
bash
treats
command
name
that
doesn
have
pletions
possible
alias
attempts
alias
expansion
alias
bash
attempts
program
mable
completion
using
command
word
resulting
from
expanded
alias
promptvars
prompt
strings
undergo
parameter
expansion
command
substitution
arithmetic
expansion
quote
removal
after
being
expanded
described
prompting
above
this
option
enabled
fault
restricted
shell
shell
sets
this
option
started
restricted
mode
restricted
shell
below
value
changed
this
reset
when
startup
files
executed
allowing
startup
files
discover
whether
shell
restricted
shift
verbose
shift
builtin
prints
error
message
when
shift
count
exceeds
number
posi
tional
parameters
sourcepath
source
builtin
uses
value
path
find
directory
containing
file
plied
argument
this
option
enabled
default
echo
echo
builtin
expands
backslash
escape
sequences
default
suspend
suspend
execution
this
shell
until
receives
sigcont
signal
login
shell
cannot
suspended
option
used
override
this
force
suspension
return
status
unless
shell
login
shell
supplied
control
enabled
test
expr
expr
return
status
true
false
depending
evaluation
conditional
expression
expr
each
operator
operand
must
separate
argument
expressions
composed
primaries
described
above
under
conditional
expressions
test
does
accept
options
does
accept
ignore
gument
signifying
options
expressions
combined
using
following
operators
listed
decreasing
order
precedence
evaluation
depends
number
arguments
below
operator
precedence
used
when
there
five
more
arguments
expr
true
expr
false
expr
returns
value
expr
this
used
override
normal
precedence
operators
expr
expr
true
both
expr
expr
true
expr
expr
true
either
expr
expr
true
test
evaluate
conditional
expressions
using
rules
based
number
arguments
arguments
expression
false
argument
expression
true
only
argument
null
arguments
first
argument
expression
true
only
second
argument
null
first
argument
unary
conditional
operators
listed
above
under
conditional
expressions
expression
true
unary
test
true
first
argument
valid
unary
condi
tional
operator
expression
false
arguments
following
conditions
applied
order
listed
second
argument
binary
conditional
operators
listed
above
under
conditional
expressions
result
expression
result
binary
test
using
first
third
arguments
operands
operators
considered
binary
operators
when
there
three
arguments
first
argument
value
negation
argument
test
using
second
third
arguments
first
argument
exactly
third
argument
exactly
result
argument
test
second
argument
otherwise
expression
false
arguments
first
argument
result
negation
three
argument
expression
composed
remaining
arguments
otherwise
expression
parsed
evaluated
according
precedence
using
rules
listed
above
more
arguments
expression
parsed
evaluated
according
precedence
using
rules
listed
above
when
used
with
test
operators
sort
lexicographically
using
ascii
ordering
times
print
accumulated
user
system
times
shell
processes
from
shell
return
status
trap
sigspec
command
read
executed
when
shell
receives
signal
sigspec
absent
there
single
sigspec
each
specified
signal
reset
original
disposition
value
upon
entrance
shell
null
string
signal
specified
each
sigspec
ignored
shell
commands
invokes
present
been
supplied
then
trap
mands
associated
with
each
sigspec
displayed
arguments
supplied
only
given
trap
prints
list
commands
associated
with
each
signal
option
causes
shell
print
list
signal
names
their
corresponding
numbers
each
sigspec
either
signal
name
defined
signal
signal
number
signal
names
case
insensitive
prefix
optional
sigspec
exit
command
executed
exit
from
shell
sigspec
debug
mand
executed
before
every
simple
command
command
case
command
select
command
every
arithmetic
command
before
first
command
executes
shell
function
shell
grammar
above
refer
description
extdebug
option
shopt
builtin
details
effect
debug
trap
sigspec
return
command
executed
each
time
shell
function
script
executed
with
source
builtins
finishes
executing
sigspec
command
executed
whenever
pipeline
which
consist
single
simple
command
list
compound
command
returns
zero
exit
status
subject
following
conditions
trap
executed
failed
command
part
command
list
immediately
following
while
until
keyword
part
test
statement
part
command
executed
list
except
command
following
final
command
pipeline
last
command
return
value
being
inverted
using
these
same
conditions
obeyed
errexit
option
signals
ignored
upon
entry
shell
cannot
trapped
reset
trapped
signals
that
being
nored
reset
their
original
values
subshell
subshell
environment
when
created
turn
status
false
sigspec
invalid
otherwise
trap
returns
true
type
aftpp
name
name
with
options
indicate
each
name
would
interpreted
used
command
name
option
used
type
prints
string
which
alias
keyword
function
builtin
file
name
alias
shell
reserved
word
function
builtin
disk
file
respectively
name
found
then
nothing
printed
exit
status
false
returned
option
used
type
either
returns
name
disk
file
that
would
executed
name
were
specified
command
name
nothing
type
name
would
return
file
option
forces
path
search
each
name
even
type
name
would
return
file
command
hashed
print
hashed
value
which
necessarily
file
that
appears
first
path
option
used
type
prints
places
that
contain
executable
named
name
this
includes
aliases
functions
only
option
also
used
table
hashed
commands
consulted
when
using
option
suppresses
shell
function
lookup
with
command
builtin
type
returns
true
arguments
found
false
found
ulimit
ulimit
bcdefiklmnpqrstuvxprt
limit
provides
control
over
resources
available
shell
processes
started
systems
that
allow
such
control
options
specify
that
hard
soft
limit
given
resource
hard
limit
cannot
increased
root
user
once
soft
limit
increased
value
hard
limit
neither
specified
both
soft
hard
limits
value
limit
number
unit
specified
resource
special
values
hard
soft
unlimited
which
stand
current
hard
limit
current
soft
limit
limit
respec
tively
limit
omitted
current
value
soft
limit
resource
printed
unless
option
given
when
more
than
resource
specified
limit
name
unit
appropriate
printed
before
value
other
options
interpreted
follows
current
limits
reported
limits
maximum
socket
buffer
size
maximum
size
core
files
created
maximum
size
process
data
segment
maximum
scheduling
priority
nice
maximum
size
files
written
shell
children
maximum
number
pending
signals
maximum
number
kqueues
that
allocated
maximum
size
that
locked
into
memory
maximum
resident
size
many
systems
honor
this
limit
maximum
number
open
file
descriptors
most
systems
allow
this
value
pipe
size
byte
blocks
this
maximum
number
bytes
posix
message
queues
maximum
real
time
scheduling
priority
maximum
stack
size
maximum
amount
time
seconds
maximum
number
processes
available
single
user
maximum
amount
virtual
memory
available
shell
some
systems
children
maximum
number
file
locks
maximum
number
pseudoterminals
maximum
time
real
time
process
before
blocking
microseconds
maximum
number
threads
limit
given
option
used
limit
value
specified
resource
option
given
then
assumed
values
byte
increments
except
which
seconds
which
microseconds
which
units
byte
blocks
which
unscaled
values
when
posix
mode
which
byte
increments
return
status
unless
invalid
option
argument
supplied
error
occurs
while
setting
limit
umask
mode
user
file
creation
mask
mode
mode
begins
with
digit
interpreted
octal
otherwise
interpreted
symbolic
mode
mask
similar
that
accepted
chmod
mode
omitted
current
value
mask
printed
option
causes
mask
printed
symbolic
form
default
output
octal
number
option
supplied
mode
omitted
output
form
that
reused
input
return
status
mode
successfully
changed
mode
argument
supplied
false
otherwise
unalias
name
remove
each
name
from
list
defined
aliases
supplied
alias
definitions
removed
return
value
true
unless
supplied
name
defined
alias
unset
name
each
name
remove
corresponding
variable
function
option
given
each
name
refers
shell
variable
that
variable
removed
read
only
variables
unset
specified
each
name
refers
shell
function
function
definition
removed
option
supplied
name
variable
with
nameref
attribute
name
will
unset
rather
than
variable
references
effect
option
supplied
options
supplied
each
name
refers
variable
there
variable
that
name
function
with
that
name
unset
each
unset
variable
function
removed
from
environment
passed
subsequent
commands
bash
aliases
bash
argv
bash
cmds
bash
command
bash
subshell
bashpid
comp
wordbreaks
dirstack
epochrealtime
epochseconds
funcname
groups
histcmd
lineno
random
seconds
srandom
unset
they
lose
their
special
properties
even
they
subsequently
reset
exit
status
true
unless
name
readonly
wait
varname
wait
each
specified
child
process
return
termination
status
each
process
specification
spec
given
processes
that
pipeline
waited
given
wait
waits
running
background
jobs
last
executed
process
substitution
process
same
return
status
zero
option
supplied
wait
waits
single
from
list
supplied
complete
returns
exit
status
none
supplied
arguments
child
shell
arguments
supplied
shell
unwaited
children
exit
status
option
supplied
process
identifier
which
exit
status
returned
assigned
variable
varname
named
option
gument
variable
will
unset
initially
before
assignment
this
useful
only
when
option
supplied
supplying
option
when
control
enabled
forces
wait
wait
terminate
before
returning
status
instead
returning
when
changes
status
specifies
existent
process
return
status
otherwise
return
status
exit
status
last
process
waited
shell
compatibility
mode
bash
introduced
concept
shell
compatibility
level
specified
options
shopt
builtin
compat
compat
compat
compat
there
only
current
compatibility
level
each
option
mutually
exclusive
compatibility
level
intended
allow
users
select
behavior
from
previous
versions
that
incompatible
with
newer
versions
while
they
migrate
scripts
current
features
behavior
tended
temporary
solution
this
section
does
mention
behavior
that
standard
particular
version
setting
compat
means
that
quoting
regexp
matching
operator
quotes
special
regexp
characters
word
which
default
havior
bash
above
user
enables
compat
affect
behavior
other
compatibility
levels
including
current
compatibility
level
idea
that
each
compatibility
level
controls
behavior
that
changed
that
sion
bash
that
behavior
have
been
present
earlier
versions
instance
change
locale
based
comparisons
with
command
came
bash
earlier
versions
used
ascii
based
comparisons
abling
compat
will
enable
ascii
based
comparisons
well
that
granularity
sufficient
uses
result
users
should
employ
compatibility
levels
carefully
read
documentation
particular
feature
find
current
behavior
bash
introduced
shell
variable
bash
compat
value
assigned
this
variable
decimal
version
like
integer
corresponding
compatnn
option
like
determines
compatibility
level
starting
with
bash
bash
begun
deprecating
older
compatibility
levels
eventually
options
will
moved
favor
bash
compat
bash
final
version
which
there
will
individual
shopt
option
previous
version
users
should
bash
compat
bash
later
versions
following
table
describes
behavior
changes
controlled
each
compatibility
level
setting
compatnn
used
shorthand
setting
compatibility
level
using
following
mechanisms
versions
prior
bash
compatibility
level
using
corresponding
compatnn
shopt
option
bash
later
versions
bash
compat
variable
preferred
required
bash
later
versions
compat
quoting
command
regexp
matching
operator
special
effect
compat
interrupting
command
list
such
causes
execution
next
command
list
bash
later
versions
shell
acts
received
interrupt
interrupting
command
list
aborts
execution
entire
list
compat
operators
command
consider
current
locale
when
comparing
strings
they
ascii
ordering
bash
versions
prior
bash
ascii
collation
strcmp
bash
later
current
locale
collation
sequence
strcoll
compat
posix
mode
time
followed
options
still
recognized
reserved
word
this
posix
interpretation
posix
mode
parser
requires
that
even
number
single
quotes
occur
word
portion
double
quoted
parameter
expansion
treats
them
specially
that
characters
within
single
quotes
considered
quoted
this
posix
interpretation
compat
replacement
string
double
quoted
pattern
substitution
does
undergo
quote
removal
does
versions
after
bash
posix
mode
single
quotes
considered
special
when
expanding
word
portion
double
quoted
parameter
expansion
used
quote
closing
brace
other
special
character
this
part
posix
interpretation
later
versions
single
quotes
special
within
double
quoted
word
expansions
compat
shell
does
print
warning
message
attempt
made
quoted
compound
assignment
argument
declare
declare
later
versions
warn
that
this
usage
deprecated
word
expansion
errors
considered
fatal
errors
that
cause
current
command
fail
even
posix
mode
default
behavior
make
them
fatal
errors
that
cause
shell
exit
when
executing
shell
function
loop
state
while
until
reset
break
continue
that
function
will
break
continue
loops
calling
context
bash
later
reset
loop
state
prevent
this
compat
shell
sets
values
used
bash
argv
bash
argc
they
expand
shell
posi
tional
parameters
even
extended
debugging
mode
enabled
subshell
inherits
loops
from
parent
context
break
continue
will
cause
subshell
exit
bash
later
reset
loop
state
prevent
exit
variable
assignments
preceding
builtins
like
export
readonly
that
attributes
continue
fect
variables
with
same
name
calling
environment
even
shell
posix
mode
compat
bash
changed
random
generated
introduce
slightly
more
randomness
shell
patibility
level
lower
reverts
method
from
bash
previous
versions
seeding
random
number
generator
assigning
value
random
will
produce
same
sequence
bash
command
hash
table
empty
bash
versions
prior
bash
printed
informational
message
that
effect
even
when
producing
output
that
reused
input
bash
suppresses
that
sage
when
option
supplied
restricted
shell
bash
started
with
name
rbash
option
supplied
invocation
shell
becomes
restricted
restricted
shell
used
environment
more
controlled
than
standard
shell
behaves
identically
bash
with
exception
that
following
disallowed
performed
changing
directories
with
setting
unsetting
values
shell
path
histfile
bash
specifying
command
names
containing
specifying
filename
containing
argument
builtin
command
specifying
filename
containing
slash
argument
history
builtin
command
specifying
filename
containing
slash
argument
option
hash
builtin
command
importing
function
definitions
from
shell
environment
startup
parsing
value
shellopts
from
shell
environment
startup
redirecting
output
using
redirection
operators
using
exec
builtin
command
replace
shell
with
another
command
adding
deleting
builtin
commands
with
options
enable
builtin
command
using
enable
builtin
command
enable
disabled
shell
builtins
specifying
option
command
builtin
command
turning
restricted
mode
with
restricted
these
restrictions
enforced
after
startup
files
read
when
command
that
found
shell
script
executed
command
execution
above
rbash
turns
strictions
shell
spawned
execute
script
also
bash
reference
manual
brian
chet
ramey
readline
library
brian
chet
ramey
history
library
brian
chet
ramey
portable
operating
system
interface
posix
part
shell
utilities
ieee
http
pubs
opengroup
onlinepubs
http
tiswww
case
chet
bash
posix
description
posix
mode
emacs
readline
files
bash
bash
executable
profile
systemwide
initialization
file
executed
login
shells
bash
bashrc
systemwide
interactive
shell
startup
file
bash
bash
logout
systemwide
login
shell
cleanup
file
executed
when
login
shell
exits
bash
profile
personal
initialization
file
executed
login
shells
bashrc
individual
interactive
shell
startup
file
bash
logout
individual
login
shell
cleanup
file
executed
when
login
shell
exits
inputrc
individual
readline
initialization
file
authors
brian
free
software
foundation
bfox
chet
ramey
case
western
reserve
university
chet
ramey
case
reports
find
bash
should
report
first
should
make
sure
that
really
that
appears
latest
version
bash
latest
version
always
available
from
bash
once
have
determined
that
actually
exists
bashbug
command
submit
report
have
encouraged
mail
that
well
suggestions
philosophical
reports
mailed
bash
posted
usenet
newsgroup
bash
reports
should
include
version
number
bash
hardware
operating
system
compiler
used
compile
description
behaviour
short
script
recipe
which
exercises
bashbug
inserts
first
three
items
automatically
into
template
provides
filing
report
comments
reports
concerning
this
manual
page
should
directed
chet
ramey
case
bugs
slow
there
some
subtle
differences
between
bash
traditional
versions
mostly
because
posix
specifi
cation
aliases
confusing
some
uses
shell
builtin
commands
functions
stoppable
restartable
compound
commands
command
sequences
form
handled
gracefully
when
process
suspension
attempted
when
process
stopped
shell
immediately
executes
next
command
sequence
fices
place
sequence
commands
between
parentheses
force
into
subshell
which
stopped
unit
array
variables
exported
there
only
active
coprocess
time
bash
october
bash
